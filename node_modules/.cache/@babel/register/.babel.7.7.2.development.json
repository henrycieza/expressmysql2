{
  "{\"sourceRoot\":\"/home/henry/expressmysql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _index = _interopRequireDefault(require(\"./routes/index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//console.log(indexRouter);\n//const { check, validationResult } = require('express-validator');\n//const { param, query, cookies, header, body} = require ('express-validator'); \nvar createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar expressValidator = require('express-validator');\n\nvar hbs = require('hbs');\n\nvar bodyParser = require('body-parser'); //var usersRouter = require('./routes/users');\n\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express[\"static\"](path.join(__dirname, 'public'))); //app.use(expressValidator());\n\napp.use('/', _index[\"default\"]); //app.use('/users', usersRouter);\n// catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500); //res.render('error');\n\n  res.end();\n  console.error(err);\n}); // app.post('/customerstest',\n// [\n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check('contact_email','invalide email').isEmail()\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(errors);\n//       console.log(req.body);\n//     if (!errors.isEmpty()) {\n//       console.log('dentro del if');\n//       console.log(errors);\n//       return res.status(422).json({ errors: errors.array() });\n//       res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//     }else {\n//       let first_name = req.body.first_name;\n//       let last_name = req.body.last_name;\n//       let document_number = req.body.document_number;\n//       let country = req.body.country;   \n//       let contact_email = req.body.contact_email;\n//     //   res.send({});\n//     // } \n// const data = [];\n// mySqlConnectionFactory().then(connection => {\n//   const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n//   connection.query(query, [first_name,last_name,document_number,country]);\n//   //console.log('****** fin insert personal_data *******');\n//   const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n//   connection.query(query2,[contact_email]);\n//   //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n//   console.log('**********fin insert customer *************')\n//     //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//     .on('result', row =>console.log(row))\n//     //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//     //.on('end', () => res.send(200));\n// }).catch(error => console.error(error));\n// res.send('respond with a resource');\n//} \n// });\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsInJlcXVpcmUiLCJleHByZXNzIiwicGF0aCIsImNvb2tpZVBhcnNlciIsImxvZ2dlciIsImV4cHJlc3NWYWxpZGF0b3IiLCJoYnMiLCJib2R5UGFyc2VyIiwiYXBwIiwic2V0Iiwiam9pbiIsIl9fZGlybmFtZSIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJpbmRleFJvdXRlciIsInJlcSIsInJlcyIsIm5leHQiLCJlcnIiLCJsb2NhbHMiLCJtZXNzYWdlIiwiZXJyb3IiLCJnZXQiLCJzdGF0dXMiLCJlbmQiLCJjb25zb2xlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7OztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUlBLFdBQVcsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFDQSxJQUFJRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQWxCOztBQUNBLElBQUlHLFlBQVksR0FBR0gsT0FBTyxDQUFDLGVBQUQsQ0FBMUI7O0FBQ0EsSUFBSUksTUFBTSxHQUFHSixPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFDQSxJQUFJSyxnQkFBZ0IsR0FBR0wsT0FBTyxDQUFDLG1CQUFELENBQTlCOztBQUNBLElBQUlNLEdBQUcsR0FBR04sT0FBTyxDQUFDLEtBQUQsQ0FBakI7O0FBQ0EsSUFBSU8sVUFBVSxHQUFHUCxPQUFPLENBQUMsYUFBRCxDQUF4QixDLENBR0E7OztBQUVBLElBQUlRLEdBQUcsR0FBR1AsT0FBTyxFQUFqQixDLENBRUE7O0FBQ0FPLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE9BQVIsRUFBaUJQLElBQUksQ0FBQ1EsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLE9BQXJCLENBQWpCO0FBQ0FILEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGFBQVIsRUFBdUIsS0FBdkI7QUFDQUQsR0FBRyxDQUFDSSxHQUFKLENBQVFSLE1BQU0sQ0FBQyxLQUFELENBQWQ7QUFDQUksR0FBRyxDQUFDSSxHQUFKLENBQVFYLE9BQU8sQ0FBQ1ksSUFBUixFQUFSO0FBQ0FMLEdBQUcsQ0FBQ0ksR0FBSixDQUFRWCxPQUFPLENBQUNhLFVBQVIsQ0FBbUI7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBbkIsQ0FBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUVQsWUFBWSxFQUFwQjtBQUNBSyxHQUFHLENBQUNJLEdBQUosQ0FBUVgsT0FBTyxVQUFQLENBQWVDLElBQUksQ0FBQ1EsSUFBTCxDQUFVQyxTQUFWLEVBQXFCLFFBQXJCLENBQWYsQ0FBUixFLENBQ0E7O0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLEdBQVIsRUFBYUksaUJBQWIsRSxDQUNBO0FBRUE7O0FBQ0FSLEdBQUcsQ0FBQ0ksR0FBSixDQUFRLFVBQVNLLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDL0JBLEVBQUFBLElBQUksQ0FBQ3BCLFdBQVcsQ0FBQyxHQUFELENBQVosQ0FBSjtBQUNELENBRkQsRSxDQUlBOztBQUNBUyxHQUFHLENBQUNJLEdBQUosQ0FBUSxVQUFTUSxHQUFULEVBQWNILEdBQWQsRUFBbUJDLEdBQW5CLEVBQXdCQyxJQUF4QixFQUE4QjtBQUNwQztBQUNBRCxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0MsT0FBWCxHQUFxQkYsR0FBRyxDQUFDRSxPQUF6QjtBQUNBSixFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBV0UsS0FBWCxHQUFtQk4sR0FBRyxDQUFDVCxHQUFKLENBQVFnQixHQUFSLENBQVksS0FBWixNQUF1QixhQUF2QixHQUF1Q0osR0FBdkMsR0FBNkMsRUFBaEUsQ0FIb0MsQ0FLcEM7O0FBQ0FGLEVBQUFBLEdBQUcsQ0FBQ08sTUFBSixDQUFXTCxHQUFHLENBQUNLLE1BQUosSUFBYyxHQUF6QixFQU5vQyxDQU9wQzs7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxHQUFKO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0osS0FBUixDQUFjSCxHQUFkO0FBQ0QsQ0FWRCxFLENBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNGOztBQUNBUSxNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixHQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9oZW5yeS9leHByZXNzbXlzcWwiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBpbmRleFJvdXRlciBmcm9tICcuL3JvdXRlcy9pbmRleCc7XG4vL2NvbnNvbGUubG9nKGluZGV4Um91dGVyKTtcbi8vY29uc3QgeyBjaGVjaywgdmFsaWRhdGlvblJlc3VsdCB9ID0gcmVxdWlyZSgnZXhwcmVzcy12YWxpZGF0b3InKTtcbi8vY29uc3QgeyBwYXJhbSwgcXVlcnksIGNvb2tpZXMsIGhlYWRlciwgYm9keX0gPSByZXF1aXJlICgnZXhwcmVzcy12YWxpZGF0b3InKTsgXG52YXIgY3JlYXRlRXJyb3IgPSByZXF1aXJlKCdodHRwLWVycm9ycycpO1xudmFyIGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XG52YXIgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbnZhciBjb29raWVQYXJzZXIgPSByZXF1aXJlKCdjb29raWUtcGFyc2VyJyk7XG52YXIgbG9nZ2VyID0gcmVxdWlyZSgnbW9yZ2FuJyk7XG52YXIgZXhwcmVzc1ZhbGlkYXRvciA9IHJlcXVpcmUoJ2V4cHJlc3MtdmFsaWRhdG9yJyk7XG52YXIgaGJzID0gcmVxdWlyZSgnaGJzJyk7XG52YXIgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XG5cblxuLy92YXIgdXNlcnNSb3V0ZXIgPSByZXF1aXJlKCcuL3JvdXRlcy91c2VycycpO1xuXG52YXIgYXBwID0gZXhwcmVzcygpO1xuXG4vLyB2aWV3IGVuZ2luZSBzZXR1cFxuYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCAndmlld3MnKSk7XG5hcHAuc2V0KCd2aWV3IGVuZ2luZScsICdoYnMnKTtcbmFwcC51c2UobG9nZ2VyKCdkZXYnKSk7XG5hcHAudXNlKGV4cHJlc3MuanNvbigpKTtcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAncHVibGljJykpKTtcbi8vYXBwLnVzZShleHByZXNzVmFsaWRhdG9yKCkpO1xuYXBwLnVzZSgnLycsIGluZGV4Um91dGVyKTtcbi8vYXBwLnVzZSgnL3VzZXJzJywgdXNlcnNSb3V0ZXIpO1xuXG4vLyBjYXRjaCA0MDQgYW5kIGZvcndhcmQgdG8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICBuZXh0KGNyZWF0ZUVycm9yKDQwNCkpO1xufSk7XG5cbi8vIGVycm9yIGhhbmRsZXJcbmFwcC51c2UoZnVuY3Rpb24oZXJyLCByZXEsIHJlcywgbmV4dCkge1xuICAvLyBzZXQgbG9jYWxzLCBvbmx5IHByb3ZpZGluZyBlcnJvciBpbiBkZXZlbG9wbWVudFxuICByZXMubG9jYWxzLm1lc3NhZ2UgPSBlcnIubWVzc2FnZTtcbiAgcmVzLmxvY2Fscy5lcnJvciA9IHJlcS5hcHAuZ2V0KCdlbnYnKSA9PT0gJ2RldmVsb3BtZW50JyA/IGVyciA6IHt9O1xuXG4gIC8vIHJlbmRlciB0aGUgZXJyb3IgcGFnZVxuICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKTtcbiAgLy9yZXMucmVuZGVyKCdlcnJvcicpO1xuICByZXMuZW5kKCk7XG4gIGNvbnNvbGUuZXJyb3IoZXJyKTtcbn0pO1xuXG4vLyBhcHAucG9zdCgnL2N1c3RvbWVyc3Rlc3QnLFxuLy8gW1xuLy8gICBjaGVjaygnZmlyc3RfbmFtZScsJ2ludmFsaWRlIG5hbWUnKS5pc0xlbmd0aCh7bWluOjQgLCBtYXggOjE1MH0pLFxuLy8gICBjaGVjaygnbGFzdF9uYW1lJywnaW52YWxpZGUgbGFzdCBuYW1lJykuaXNMZW5ndGgoe21pbjo0ICwgbWF4IDoxNTB9KSxcbi8vICAgY2hlY2soJ2RvY3VtZW50X251bWJlcicsJ2ludmFsaWRlIEROSScpLmlzTGVuZ3RoKHttYXggOjE1fSksXG4vLyAgIGNoZWNrKCdjb3VudHJ5JywnaW52YWxpZGUgY291bnRyeScpLmlzTGVuZ3RoKHttaW46NCwgbWF4OjEwMH0pLFxuLy8gICBjaGVjaygnY29udGFjdF9lbWFpbCcsJ2ludmFsaWRlIGVtYWlsJykuaXNFbWFpbCgpXG4vLyAgIC8vY29uc29sZS5sb2coXCJkYXRvcyBsZWlkb3MgOiBcIiArIHJlcS5ib2R5LmZpcnN0X25hbWUrJyAnICtyZXEuYm9keS5sYXN0X25hbWUrJyAnK3JlcS5ib2R5LmRvY3VtZW50X251bWJlcisnICcrcmVxLmJvZHkuY291bnRyeSlcblxuLy8gXSwgZnVuY3Rpb24ocmVxLHJlcyl7XG4vLyAgICAgICAgIGNvbnN0IGVycm9ycyA9IHZhbGlkYXRpb25SZXN1bHQocmVxKTtcbi8vICAgICAgICAgY29uc29sZS5sb2coZXJyb3JzKTtcbiAgLy8gICAgICAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuICAvLyAgICAgaWYgKCFlcnJvcnMuaXNFbXB0eSgpKSB7XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKCdkZW50cm8gZGVsIGlmJyk7XG4gIC8vICAgICAgIGNvbnNvbGUubG9nKGVycm9ycyk7XG4gIC8vICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7IGVycm9yczogZXJyb3JzLmFycmF5KCkgfSk7XG4gIC8vICAgICAgIHJlcy5yZW5kZXIoJ2Vycm9yJywgeyB0aXRsZTogJ1VTVUFSSU8gSU5TRVJUQURPIFBPU1QnLCBlcnJvciB9KTtcbiAgLy8gICAgIH1lbHNlIHtcbiAgLy8gICAgICAgbGV0IGZpcnN0X25hbWUgPSByZXEuYm9keS5maXJzdF9uYW1lO1xuICAvLyAgICAgICBsZXQgbGFzdF9uYW1lID0gcmVxLmJvZHkubGFzdF9uYW1lO1xuICAvLyAgICAgICBsZXQgZG9jdW1lbnRfbnVtYmVyID0gcmVxLmJvZHkuZG9jdW1lbnRfbnVtYmVyO1xuICAvLyAgICAgICBsZXQgY291bnRyeSA9IHJlcS5ib2R5LmNvdW50cnk7ICAgXG4gIC8vICAgICAgIGxldCBjb250YWN0X2VtYWlsID0gcmVxLmJvZHkuY29udGFjdF9lbWFpbDtcbiAgLy8gICAgIC8vICAgcmVzLnNlbmQoe30pO1xuICAvLyAgICAgLy8gfSBcbiAgLy8gY29uc3QgZGF0YSA9IFtdO1xuXG4gIC8vIG15U3FsQ29ubmVjdGlvbkZhY3RvcnkoKS50aGVuKGNvbm5lY3Rpb24gPT4ge1xuICAvLyAgIGNvbnN0IHF1ZXJ5ID0gICdJTlNFUlQgSU5UTyBwZXJzb25hbF9kYXRhIChmaXJzdF9uYW1lLCBsYXN0X25hbWUsIGRvY3VtZW50X251bWJlciwgY291bnRyeSkgVkFMVUVTICg/LD8sPyw/KTsnO1xuICAvLyAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIFtmaXJzdF9uYW1lLGxhc3RfbmFtZSxkb2N1bWVudF9udW1iZXIsY291bnRyeV0pO1xuICAgIFxuICAgIFxuICAvLyAgIC8vY29uc29sZS5sb2coJyoqKioqKiBmaW4gaW5zZXJ0IHBlcnNvbmFsX2RhdGEgKioqKioqKicpO1xuXG4gIC8vICAgY29uc3QgcXVlcnkyID0gJ0lOU0VSVCBJTlRPIGN1c3RvbWVyIChwZXJzb25hbF9kYXRhX2lkLCBjb250YWN0X2VtYWlsKSBWQUxVRVMgKCBMQVNUX0lOU0VSVF9JRCgpICwgPyknO1xuICAvLyAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnkyLFtjb250YWN0X2VtYWlsXSk7XG4gIC8vICAgLy9jb25zb2xlLmxvZygndWx0aW1vIHJlZ2lzdHJvIGN1c3RvbWVyIGluc2VydGFkbyA6JyArIExBU1RfSU5TRVJUX0lEKCkpO1xuICAvLyAgIGNvbnNvbGUubG9nKCcqKioqKioqKioqZmluIGluc2VydCBjdXN0b21lciAqKioqKioqKioqKioqJylcbiAgLy8gICAgIC8vLm9uKCdlcnJvcicsIGVycm9yID0+IHJlcy5yZW5kZXIoJ2Vycm9yJywgeyB0aXRsZTogJ1VTVUFSSU8gSU5TRVJUQURPIFBPU1QnLCBlcnJvciB9KSlcbiAgLy8gICAgIC5vbigncmVzdWx0Jywgcm93ID0+Y29uc29sZS5sb2cocm93KSlcbiAgLy8gICAgIC8vLm9uKCdyZXN1bHQnLCByb3cgPT5jb25zb2xlLmxvZygnaWQgUGVyc29uYWwgRGF0YSA6ICcrIGlkQ3VzdG9tZXIpKVxuICAvLyAgICAgLy8ub24oJ2VuZCcsICgpID0+IHJlcy5zZW5kKDIwMCkpO1xuICAvLyB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gIC8vIHJlcy5zZW5kKCdyZXNwb25kIHdpdGggYSByZXNvdXJjZScpO1xuICAvL30gXG4vLyB9KTtcbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "expressValidator",
        "hbs",
        "bodyParser",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "indexRouter",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "end",
        "console",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;;;AACA;AACA;AACA;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIK,gBAAgB,GAAGL,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAIM,GAAG,GAAGN,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIO,UAAU,GAAGP,OAAO,CAAC,aAAD,CAAxB,C,CAGA;;;AAEA,IAAIQ,GAAG,GAAGP,OAAO,EAAjB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACI,GAAJ,CAAQR,MAAM,CAAC,KAAD,CAAd;AACAI,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACa,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQT,YAAY,EAApB;AACAK,GAAG,CAACI,GAAJ,CAAQX,OAAO,UAAP,CAAeC,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CACA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaI,iBAAb,E,CACA;AAEA;;AACAR,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACpB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAS,GAAG,CAACI,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACT,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB,EANoC,CAOpC;;AACAP,EAAAA,GAAG,CAACQ,GAAJ;AACAC,EAAAA,OAAO,CAACJ,KAAR,CAAcH,GAAd;AACD,CAVD,E,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AACAQ,MAAM,CAACC,OAAP,GAAiBrB,GAAjB",
      "sourceRoot": "/home/henry/expressmysql",
      "sourcesContent": [
        "\nimport indexRouter from './routes/index';\n//console.log(indexRouter);\n//const { check, validationResult } = require('express-validator');\n//const { param, query, cookies, header, body} = require ('express-validator'); \nvar createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar expressValidator = require('express-validator');\nvar hbs = require('hbs');\nvar bodyParser = require('body-parser');\n\n\n//var usersRouter = require('./routes/users');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n//app.use(expressValidator());\napp.use('/', indexRouter);\n//app.use('/users', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  //res.render('error');\n  res.end();\n  console.error(err);\n});\n\n// app.post('/customerstest',\n// [\n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check('contact_email','invalide email').isEmail()\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(errors);\n  //       console.log(req.body);\n  //     if (!errors.isEmpty()) {\n  //       console.log('dentro del if');\n  //       console.log(errors);\n  //       return res.status(422).json({ errors: errors.array() });\n  //       res.render('error', { title: 'USUARIO INSERTADO POST', error });\n  //     }else {\n  //       let first_name = req.body.first_name;\n  //       let last_name = req.body.last_name;\n  //       let document_number = req.body.document_number;\n  //       let country = req.body.country;   \n  //       let contact_email = req.body.contact_email;\n  //     //   res.send({});\n  //     // } \n  // const data = [];\n\n  // mySqlConnectionFactory().then(connection => {\n  //   const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n  //   connection.query(query, [first_name,last_name,document_number,country]);\n    \n    \n  //   //console.log('****** fin insert personal_data *******');\n\n  //   const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n  //   connection.query(query2,[contact_email]);\n  //   //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n  //   console.log('**********fin insert customer *************')\n  //     //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n  //     .on('result', row =>console.log(row))\n  //     //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n  //     //.on('end', () => res.send(200));\n  // }).catch(error => console.error(error));\n  // res.send('respond with a resource');\n  //} \n// });\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573815640805
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressValidator = _interopRequireDefault(require(\"express-validator\"));\n\nvar _MySqlConnectionFactory = _interopRequireDefault(require(\"../mysql/MySqlConnectionFactory\"));\n\nvar _generatorCode = _interopRequireDefault(require(\"../public/javascripts/generatorCode\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _require = require('express-validator'),\n    check = _require.check,\n    validationResult = _require.validationResult;\n\nvar _require2 = require('express-validator'),\n    param = _require2.param,\n    query = _require2.query,\n    cookies = _require2.cookies,\n    header = _require2.header,\n    body = _require2.body;\n\nvar app = (0, _express[\"default\"])(); //const server = express(); \n\napp.get('/', function (req, res, next) {\n  var data = []; // const idCustomer = \"\";\n\n  (0, _MySqlConnectionFactory[\"default\"])({}).then(function (connection) {\n    var query = 'SELECT * FROM personal_data';\n    connection.query(query) //.on('error', error => res.render('error', { title: 'Express', error }))\n    .on('error', function (error) {\n      return console.error('error', {\n        title: 'USUARIOS',\n        error: error\n      });\n    }).on('result', function (row) {\n      return data.push({\n        id: row.id,\n        first_name: row.first_name,\n        last_name: row.last_name,\n        document_number: row.document_number,\n        country: row.country\n      });\n    }) //.on('result', row =>console.log(row))\n    .on('end', function () {\n      return res.render('index', {\n        title: 'USUARIOS',\n        data: data\n      });\n    });\n  })[\"catch\"](function (error) {\n    return console.error(error);\n  });\n});\n/***************  GET by ID users listing. ************************/\n\napp.get('/:id', function (req, res, next) {\n  console.log('dentro de get/id');\n  var userId = req.params.id;\n  console.log(userId);\n  var data = [];\n  (0, _MySqlConnectionFactory[\"default\"])({}).then(function (connection) {\n    var query = 'SELECT * FROM personal_data WHERE id = ?';\n    console.log(userId);\n    connection.query(query, [userId]).on('error', function (error) {\n      return res.render('error', {\n        title: 'USUARIOS POR ID',\n        error: error\n      });\n    }).on('result', function (row) {\n      return data = row;\n    }).on('result', function (row) {\n      return console.log(row);\n    }).on('end', function () {\n      return res.render('userid', {\n        title: 'USUARIOS POR ID',\n        data: data\n      });\n    }).on('end', function () {\n      return res.send(200);\n    });\n  })[\"catch\"](function (error) {\n    return console.error(error);\n  }); // res.send('respond with a resource');\n});\n/************************************************************************/\n\n/************************************************************************/\n\n/************************ REGISTRO CUSTOMER  *****************************/\n\n/******************* POST (/registro/customer) ***************************/\n\napp.post('/customer', [check('first_name', 'invalide name').isLength({\n  min: 4,\n  max: 150\n}), check('last_name', 'invalide last name').isLength({\n  min: 4,\n  max: 150\n}), check('document_number', 'invalide DNI').isLength({\n  max: 15\n}), check('country', 'invalide country').isLength({\n  min: 4,\n  max: 100\n}), check('contact_email', 'invalide email').isEmail() //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n], function (req, res) {\n  var errors = validationResult(req);\n  console.log(req.body);\n\n  if (!errors.isEmpty()) {\n    console.log('dentro del if');\n    console.log(errors);\n    return res.status(422).json({\n      errors: errors.array()\n    });\n    res.render('error', {\n      title: 'USUARIO INSERTADO POST',\n      error: error\n    });\n  } else {\n    var first_name = req.body.first_name;\n    var last_name = req.body.last_name;\n    var document_number = req.body.document_number;\n    var country = req.body.country;\n    var contact_email = req.body.contact_email; //   res.send({});\n    // } \n\n    var data = [];\n    (0, _MySqlConnectionFactory[\"default\"])().then(function (connection) {\n      var query = 'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n      connection.query(query, [first_name, last_name, document_number, country], function (err, result) {\n        if (err) throw err;\n        var idCustomer = result.insertId;\n        console.log(\"customer ultimo id : \" + idCustomer);\n      }); //console.log('****** fin insert personal_data *******');\n\n      var query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n      connection.query(query2, [contact_email]);\n      console.log('**********fin insert customer *************'); //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n      //.on('result', row =>console.log(row))\n      //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n      //.on('end', () => res.send(200));\n    })[\"catch\"](function (error) {\n      return console.error(error);\n    });\n    res.send('respond with a resource');\n  }\n});\n/************************ REGISTRO GUEST  *****************************/\n\n/******************* POST (/registro/guest) ***************************/\n\napp.post('/guest', [check('first_name', 'invalide name').isLength({\n  min: 4,\n  max: 150\n}), check('last_name', 'invalide last name').isLength({\n  min: 4,\n  max: 150\n}), check('document_number', 'invalide DNI').isLength({\n  max: 15\n}), check('country', 'invalide country').isLength({\n  min: 4,\n  max: 100\n}), check(' bird_date', 'invalide format date').isLength({\n  max: 15\n}) //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n], function (req, res) {\n  var errors = validationResult(req);\n  console.log(req.body);\n\n  if (!errors.isEmpty()) {\n    console.log('dentro del if');\n    console.log(errors);\n    return res.status(422).json({\n      errors: errors.array()\n    });\n    res.render('error', {\n      title: 'USUARIO INSERTADO POST',\n      error: error\n    });\n  } else {\n    var first_name = req.body.first_name;\n    var last_name = req.body.last_name;\n    var document_number = req.body.document_number;\n    var country = req.body.country;\n    var bird_date = req.body.bird_date; //   res.send({});\n    // } \n\n    var data = [];\n    (0, _MySqlConnectionFactory[\"default\"])().then(function (connection) {\n      var query = 'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n      connection.query(query, [first_name, last_name, document_number, country]); //console.log('****** fin insert personal_data *******');\n\n      var query2 = \"INSERT INTO guest (personal_data_id, bird_date) VALUES ( LAST_INSERT_ID() ,STR_TO_DATE( ? ,'%d-%m-%Y'))\";\n      connection.query(query2, [bird_date]); //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n\n      console.log('**********fin insert guest *************'); //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n      //.on('result', row =>console.log(row))\n      //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n      //.on('end', () => res.send(200));\n    })[\"catch\"](function (error) {\n      return console.error(error);\n    });\n    res.send('respond with a resource');\n  }\n});\n/********************* REGISTRO APARTMENTS  **************************/\n\n/******************* POST (/registro/guest) ***************************/\n// app.post('/apartments',\n// [\n//   check('adress','invalide name').isLength({min:4 , max :150}),\n//   //check('url','invalide last name').isLength({min:4 , max :150}),\n//   check('number_rooms','number greater than zero').isLength({max :15}),\n//   check('postal_code','invalid postal code').isInt(),\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let adress = req.body.adress;\n//         const url = \"../uploads/\";\n//         let number_rooms = req.body.number_rooms;\n//         let postal_code = req.body.postal_code;   \n//       //   res.send({});\n//       // } \n//   const data = [];\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO apartments (adress, url, number_rooms, postal_code) VALUES (?,?,?,?);';\n//     connection.query(query, [adress,url,number_rooms,postal_code]);\n//     let idApartment = LAST_INSERT_ID();    \n//     console.log('****** fin insert apartments *******')\n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n/************************ REGISTRO BOOKING  *****************************/\n\n/******************* POST (/registro/booking) ***************************/\n\napp.post('/booking', [check('adress', 'debe seleccionar una opcion').isLength({\n  max: 150\n}), check('arrival_date', 'invalide formant date').isLength({\n  max: 15\n}), check('departure_date', 'invalide formant date').isLength({\n  max: 15\n}), check('num_guest', 'number greater than zero').isInt()], function (req, res) {\n  var errors = validationResult(req);\n  console.log(req.body);\n\n  if (!errors.isEmpty()) {\n    console.log('dentro del if');\n    console.log(errors);\n    return res.status(422).json({\n      errors: errors.array()\n    });\n    res.render('error', {\n      title: 'USUARIO INSERTADO POST',\n      error: error\n    });\n  } else {\n    var adress = req.body.adress;\n    var code = _generatorCode[\"default\"];\n    var arrival_date = req.body.arrival_date;\n    var departure_date = req.body.departure_date;\n    var num_guest = req.body.country; //   res.send({});\n    // } \n\n    var data = []; //console.log(\"idcustomer :\" + idCustomer);     \n\n    (0, _MySqlConnectionFactory[\"default\"])().then(function (connection) {\n      var idApartment = connection.query(\"SELECT id FROM apartments WHERE adress = ? \", [adress]);\n      console.log(\"IdApartment : \" + idApartment);\n      var idCustomer = connection.query(\"SELECT personal_data_id FROM customer ORDER BY personal_data_id DESC LIMIT 1;\");\n      console.log(\"IdCustomer: \" + idCustomer);\n      var query2 = \"INSERT INTO booking (code, arrival_date, departure_date, num_guest, customer_personal_data_id, apartments_id) VALUES ( STR_TO_DATE( ? ,'%d-%m-%Y'), STR_TO_DATE( ? ,'%d-%m-%Y'),?,?,?,?);\";\n      connection.query(query2, [code, arrival_date, departure_date, num_guest, idCustomer, idApartment]);\n      console.log('****** fin insert booking *******').on('result', function (row) {\n        return console.log(row);\n      }); //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n      //.on('end', () => res.send(200));\n    })[\"catch\"](function (error) {\n      return console.error(error);\n    });\n    res.send('respond with a resource');\n  }\n});\n/*********************************************************************************/\n\n/*********************** PUT users listing. ************************************/\n\napp.put('/:id', function (req, res, next) {\n  console.log('dentro de PUT');\n  var id = req.param.id;\n  var first_name = req.body.first_name;\n  var last_name = req.body.last_name;\n  var document_number = req.body.document_number;\n  var country = req.body.country;\n  var data = [];\n  (0, _MySqlConnectionFactory[\"default\"])({}).then(function (connection) {\n    var query = 'UPDATE personal_data (first_name, last_name, document_number, country) SET value = (?,?,?,?) WHERE id = ?';\n    connection.query(query, [id, first_name, last_name, document_number, country]).on('error', function (error) {\n      return res.render('error', {\n        title: 'Express',\n        error: error\n      });\n    }).on('result', function (row) {\n      return console.log(row);\n    }); //.on('end', () => res.send(200));\n  })[\"catch\"](function (error) {\n    return console.error(error);\n  });\n  res.send('respond with a resource');\n});\n/************************** DELETE users listing. ****************************/\n\napp[\"delete\"]('/:id', function (req, res, next) {\n  var id = req.params.id;\n  var data = [];\n  (0, _MySqlConnectionFactory[\"default\"])({}).then(function (connection) {\n    var query = 'DELETE * FROM personal_data WHERE id=?';\n    connection.query(query, [id]).on('error', function (error) {\n      return res.render('error', {\n        title: 'Express',\n        error: error\n      });\n    }).on('result', function (row) {\n      return console.log(row);\n    }); //.on('end', () => res.send(200));\n  })[\"catch\"](function (error) {\n    return console.error(error);\n  });\n  res.send('respond with a resource');\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjaGVjayIsInZhbGlkYXRpb25SZXN1bHQiLCJwYXJhbSIsInF1ZXJ5IiwiY29va2llcyIsImhlYWRlciIsImJvZHkiLCJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZGF0YSIsInRoZW4iLCJjb25uZWN0aW9uIiwib24iLCJlcnJvciIsImNvbnNvbGUiLCJ0aXRsZSIsInJvdyIsInB1c2giLCJpZCIsImZpcnN0X25hbWUiLCJsYXN0X25hbWUiLCJkb2N1bWVudF9udW1iZXIiLCJjb3VudHJ5IiwicmVuZGVyIiwibG9nIiwidXNlcklkIiwicGFyYW1zIiwic2VuZCIsInBvc3QiLCJpc0xlbmd0aCIsIm1pbiIsIm1heCIsImlzRW1haWwiLCJlcnJvcnMiLCJpc0VtcHR5Iiwic3RhdHVzIiwianNvbiIsImFycmF5IiwiY29udGFjdF9lbWFpbCIsImVyciIsInJlc3VsdCIsImlkQ3VzdG9tZXIiLCJpbnNlcnRJZCIsInF1ZXJ5MiIsImJpcmRfZGF0ZSIsImlzSW50IiwiYWRyZXNzIiwiY29kZSIsImdlbmVyYXRvckNvZGUiLCJhcnJpdmFsX2RhdGUiLCJkZXBhcnR1cmVfZGF0ZSIsIm51bV9ndWVzdCIsImlkQXBhcnRtZW50IiwicHV0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7ZUFFb0NBLE9BQU8sQ0FBQyxtQkFBRCxDO0lBQW5DQyxLLFlBQUFBLEs7SUFBT0MsZ0IsWUFBQUEsZ0I7O2dCQUNnQ0YsT0FBTyxDQUFFLG1CQUFGLEM7SUFBOUNHLEssYUFBQUEsSztJQUFPQyxLLGFBQUFBLEs7SUFBT0MsTyxhQUFBQSxPO0lBQVNDLE0sYUFBQUEsTTtJQUFRQyxJLGFBQUFBLEk7O0FBQ3ZDLElBQU1DLEdBQUcsR0FBRywwQkFBWixDLENBQ0E7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYSxVQUFTQyxHQUFULEVBQWNDLEdBQWQsRUFB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LEdBTmQ7QUFTRk4sRUFBQUEsR0FBRyxDQUFDb0IsSUFBSixDQUFTLHlCQUFUO0FBRUUsQ0F0QkY7QUE4QkM7O0FBQ0R2QixHQUFHLFVBQUgsQ0FBVyxNQUFYLEVBQW1CLFVBQVNFLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFFMUMsTUFBSVUsRUFBRSxHQUFHWixHQUFHLENBQUNvQixNQUFKLENBQVdSLEVBQXBCO0FBRUEsTUFBTVQsSUFBSSxHQUFHLEVBQWI7QUFFQSwwQ0FBdUIsRUFBdkIsRUFBNEJDLElBQTVCLENBQWlDLFVBQUFDLFVBQVUsRUFBSTtBQUM3QyxRQUFNWCxLQUFLLEdBQUcsd0NBQWQ7QUFDQVcsSUFBQUEsVUFBVSxDQUFDWCxLQUFYLENBQWlCQSxLQUFqQixFQUF3QixDQUFDa0IsRUFBRCxDQUF4QixFQUNHTixFQURILENBQ00sT0FETixFQUNlLFVBQUFDLEtBQUs7QUFBQSxhQUFJTixHQUFHLENBQUNnQixNQUFKLENBQVcsT0FBWCxFQUFvQjtBQUFFUixRQUFBQSxLQUFLLEVBQUUsU0FBVDtBQUFvQkYsUUFBQUEsS0FBSyxFQUFMQTtBQUFwQixPQUFwQixDQUFKO0FBQUEsS0FEcEIsRUFFR0QsRUFGSCxDQUVNLFFBRk4sRUFFZ0IsVUFBQUksR0FBRztBQUFBLGFBQUdGLE9BQU8sQ0FBQ1UsR0FBUixDQUFZUixHQUFaLENBQUg7QUFBQSxLQUZuQixFQUY2QyxDQUszQztBQUNILEdBTkQsV0FNUyxVQUFBSCxLQUFLO0FBQUEsV0FBSUMsT0FBTyxDQUFDRCxLQUFSLENBQWNBLEtBQWQsQ0FBSjtBQUFBLEdBTmQ7QUFTQU4sRUFBQUEsR0FBRyxDQUFDb0IsSUFBSixDQUFTLHlCQUFUO0FBRUEsQ0FqQkY7ZUFxQmV2QixHIiwic291cmNlUm9vdCI6Ii9ob21lL2hlbnJ5L2V4cHJlc3NteXNxbC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBleHByZXNzVmFsaWRhdG9yIGZyb20gJ2V4cHJlc3MtdmFsaWRhdG9yJztcbmltcG9ydCBteVNxbENvbm5lY3Rpb25GYWN0b3J5IGZyb20gJy4uL215c3FsL015U3FsQ29ubmVjdGlvbkZhY3RvcnknO1xuaW1wb3J0IGdlbmVyYXRvckNvZGUgZnJvbSAnLi4vcHVibGljL2phdmFzY3JpcHRzL2dlbmVyYXRvckNvZGUnO1xuXG5jb25zdCB7IGNoZWNrLCB2YWxpZGF0aW9uUmVzdWx0IH0gPSByZXF1aXJlKCdleHByZXNzLXZhbGlkYXRvcicpO1xuY29uc3QgeyBwYXJhbSwgcXVlcnksIGNvb2tpZXMsIGhlYWRlciwgYm9keX0gPSByZXF1aXJlICgnZXhwcmVzcy12YWxpZGF0b3InKTsgXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG4vL2NvbnN0IHNlcnZlciA9IGV4cHJlc3MoKTsgXG5hcHAuZ2V0KCcvJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgXG4gIGNvbnN0IGRhdGEgPSBbXTtcbiAvLyBjb25zdCBpZEN1c3RvbWVyID0gXCJcIjtcbiAgbXlTcWxDb25uZWN0aW9uRmFjdG9yeSh7IH0pLnRoZW4oY29ubmVjdGlvbiA9PiB7XG4gICAgY29uc3QgcXVlcnkgPSAnU0VMRUNUICogRlJPTSBwZXJzb25hbF9kYXRhJztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5KVxuICAgICAgLy8ub24oJ2Vycm9yJywgZXJyb3IgPT4gcmVzLnJlbmRlcignZXJyb3InLCB7IHRpdGxlOiAnRXhwcmVzcycsIGVycm9yIH0pKVxuICAgICAgLm9uKCdlcnJvcicsIGVycm9yID0+IGNvbnNvbGUuZXJyb3IoJ2Vycm9yJywgeyB0aXRsZTogJ1VTVUFSSU9TJywgZXJyb3IgfSkpXG4gICAgICAub24oJ3Jlc3VsdCcsIHJvdyA9PiBkYXRhLnB1c2goeyBpZDogcm93LmlkLCBmaXJzdF9uYW1lOiByb3cuZmlyc3RfbmFtZSwgbGFzdF9uYW1lOiByb3cubGFzdF9uYW1lLCBkb2N1bWVudF9udW1iZXI6IHJvdy5kb2N1bWVudF9udW1iZXIsIGNvdW50cnk6cm93LmNvdW50cnl9KSlcbiAgICAgIC8vLm9uKCdyZXN1bHQnLCByb3cgPT5jb25zb2xlLmxvZyhyb3cpKVxuICAgICAgLm9uKCdlbmQnLCAoKSA9PiByZXMucmVuZGVyKCdpbmRleCcsIHsgdGl0bGU6ICdVU1VBUklPUycsIGRhdGEgfSkpO1xuICB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gIFxufSk7XG5cbi8qKioqKioqKioqKioqKiogIEdFVCBieSBJRCB1c2VycyBsaXN0aW5nLiAqKioqKioqKioqKioqKioqKioqKioqKiovXG5hcHAuZ2V0KCcvOmlkJywgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgY29uc29sZS5sb2coJ2RlbnRybyBkZSBnZXQvaWQnKTtcbiAgbGV0IHVzZXJJZCA9IHJlcS5wYXJhbXMuaWQ7XG4gIGNvbnNvbGUubG9nKHVzZXJJZCk7XG4gIGxldCBkYXRhID0gW107XG5cbiAgbXlTcWxDb25uZWN0aW9uRmFjdG9yeSh7IH0pLnRoZW4oY29ubmVjdGlvbiA9PiB7XG4gICAgY29uc3QgcXVlcnkgPSAnU0VMRUNUICogRlJPTSBwZXJzb25hbF9kYXRhIFdIRVJFIGlkID0gPyc7XG4gICAgY29uc29sZS5sb2codXNlcklkKTtcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LFt1c2VySWRdKVxuICAgIFxuICAgICAgLm9uKCdlcnJvcicsIGVycm9yID0+IHJlcy5yZW5kZXIoJ2Vycm9yJywgeyB0aXRsZTogJ1VTVUFSSU9TIFBPUiBJRCcsIGVycm9yIH0pKVxuICAgICAgLm9uKCdyZXN1bHQnLCByb3cgPT4gZGF0YSA9IHJvdylcbiAgICAgIC5vbigncmVzdWx0Jywgcm93ID0+Y29uc29sZS5sb2cocm93KSlcbiAgICAgIC5vbignZW5kJywgKCkgPT4gcmVzLnJlbmRlcigndXNlcmlkJywgeyB0aXRsZTogJ1VTVUFSSU9TIFBPUiBJRCcsIGRhdGEgfSkpXG4gICAgICAub24oJ2VuZCcsICgpID0+IHJlcy5zZW5kKDIwMCkpO1xuICB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gIFxuXG4gLy8gcmVzLnNlbmQoJ3Jlc3BvbmQgd2l0aCBhIHJlc291cmNlJyk7XG59KTtcbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4vKioqKioqKioqKioqKioqKioqKioqKioqIFJFR0lTVFJPIENVU1RPTUVSICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqIFBPU1QgKC9yZWdpc3Ryby9jdXN0b21lcikgKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuYXBwLnBvc3QoJy9jdXN0b21lcicsXG5bXG4gIGNoZWNrKCdmaXJzdF9uYW1lJywnaW52YWxpZGUgbmFtZScpLmlzTGVuZ3RoKHttaW46NCAsIG1heCA6MTUwfSksXG4gIGNoZWNrKCdsYXN0X25hbWUnLCdpbnZhbGlkZSBsYXN0IG5hbWUnKS5pc0xlbmd0aCh7bWluOjQgLCBtYXggOjE1MH0pLFxuICBjaGVjaygnZG9jdW1lbnRfbnVtYmVyJywnaW52YWxpZGUgRE5JJykuaXNMZW5ndGgoe21heCA6MTV9KSxcbiAgY2hlY2soJ2NvdW50cnknLCdpbnZhbGlkZSBjb3VudHJ5JykuaXNMZW5ndGgoe21pbjo0LCBtYXg6MTAwfSksXG4gIGNoZWNrKCdjb250YWN0X2VtYWlsJywnaW52YWxpZGUgZW1haWwnKS5pc0VtYWlsKClcbiAgLy9jb25zb2xlLmxvZyhcImRhdG9zIGxlaWRvcyA6IFwiICsgcmVxLmJvZHkuZmlyc3RfbmFtZSsnICcgK3JlcS5ib2R5Lmxhc3RfbmFtZSsnICcrcmVxLmJvZHkuZG9jdW1lbnRfbnVtYmVyKycgJytyZXEuYm9keS5jb3VudHJ5KVxuXG5dLCBmdW5jdGlvbihyZXEscmVzKXtcbiAgICAgICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGlvblJlc3VsdChyZXEpO1xuICAgICAgICBjb25zb2xlLmxvZyhyZXEuYm9keSk7XG4gICAgICBpZiAoIWVycm9ycy5pc0VtcHR5KCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2RlbnRybyBkZWwgaWYnKTtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3JzKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKHsgZXJyb3JzOiBlcnJvcnMuYXJyYXkoKSB9KTtcbiAgICAgICAgcmVzLnJlbmRlcignZXJyb3InLCB7IHRpdGxlOiAnVVNVQVJJTyBJTlNFUlRBRE8gUE9TVCcsIGVycm9yIH0pO1xuICAgICAgfWVsc2Uge1xuICAgICAgICBsZXQgZmlyc3RfbmFtZSA9IHJlcS5ib2R5LmZpcnN0X25hbWU7XG4gICAgICAgIGxldCBsYXN0X25hbWUgPSByZXEuYm9keS5sYXN0X25hbWU7XG4gICAgICAgIGxldCBkb2N1bWVudF9udW1iZXIgPSByZXEuYm9keS5kb2N1bWVudF9udW1iZXI7XG4gICAgICAgIGxldCBjb3VudHJ5ID0gcmVxLmJvZHkuY291bnRyeTsgICBcbiAgICAgICAgbGV0IGNvbnRhY3RfZW1haWwgPSByZXEuYm9keS5jb250YWN0X2VtYWlsO1xuICAgICAgLy8gICByZXMuc2VuZCh7fSk7XG4gICAgICAvLyB9IFxuICBjb25zdCBkYXRhID0gW107XG5cbiAgbXlTcWxDb25uZWN0aW9uRmFjdG9yeSgpLnRoZW4oY29ubmVjdGlvbiA9PiB7XG4gICAgY29uc3QgcXVlcnkgPSAgJ0lOU0VSVCBJTlRPIHBlcnNvbmFsX2RhdGEgKGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgZG9jdW1lbnRfbnVtYmVyLCBjb3VudHJ5KSBWQUxVRVMgKD8sPyw/LD8pOyc7XG4gICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW2ZpcnN0X25hbWUsbGFzdF9uYW1lLGRvY3VtZW50X251bWJlcixjb3VudHJ5XSwgZnVuY3Rpb24oZXJyLCByZXN1bHQpe1xuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgbGV0IGlkQ3VzdG9tZXIgPSAgcmVzdWx0Lmluc2VydElkO1xuICAgICAgY29uc29sZS5sb2coXCJjdXN0b21lciB1bHRpbW8gaWQgOiBcIiArIGlkQ3VzdG9tZXIpO1xuICAgIH0pO1xuICAgIFxuICAgIC8vY29uc29sZS5sb2coJyoqKioqKiBmaW4gaW5zZXJ0IHBlcnNvbmFsX2RhdGEgKioqKioqKicpO1xuXG4gICAgY29uc3QgcXVlcnkyID0gJ0lOU0VSVCBJTlRPIGN1c3RvbWVyIChwZXJzb25hbF9kYXRhX2lkLCBjb250YWN0X2VtYWlsKSBWQUxVRVMgKCBMQVNUX0lOU0VSVF9JRCgpICwgPyknO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnkyLFtjb250YWN0X2VtYWlsXSk7XG4gICBcbiAgICBjb25zb2xlLmxvZygnKioqKioqKioqKmZpbiBpbnNlcnQgY3VzdG9tZXIgKioqKioqKioqKioqKicpXG4gICAgICAvLy5vbignZXJyb3InLCBlcnJvciA9PiByZXMucmVuZGVyKCdlcnJvcicsIHsgdGl0bGU6ICdVU1VBUklPIElOU0VSVEFETyBQT1NUJywgZXJyb3IgfSkpXG4gICAgICAvLy5vbigncmVzdWx0Jywgcm93ID0+Y29uc29sZS5sb2cocm93KSlcbiAgICAgIC8vLm9uKCdyZXN1bHQnLCByb3cgPT5jb25zb2xlLmxvZygnaWQgUGVyc29uYWwgRGF0YSA6ICcrIGlkQ3VzdG9tZXIpKVxuICAgICAgLy8ub24oJ2VuZCcsICgpID0+IHJlcy5zZW5kKDIwMCkpO1xuICB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gIHJlcy5zZW5kKCdyZXNwb25kIHdpdGggYSByZXNvdXJjZScpO1xuICB9IFxuIH0pO1xuXG4gLyoqKioqKioqKioqKioqKioqKioqKioqKiBSRUdJU1RSTyBHVUVTVCAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKiBQT1NUICgvcmVnaXN0cm8vZ3Vlc3QpICoqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbmFwcC5wb3N0KCcvZ3Vlc3QnLFxuW1xuIFxuICBjaGVjaygnZmlyc3RfbmFtZScsJ2ludmFsaWRlIG5hbWUnKS5pc0xlbmd0aCh7bWluOjQgLCBtYXggOjE1MH0pLFxuICBjaGVjaygnbGFzdF9uYW1lJywnaW52YWxpZGUgbGFzdCBuYW1lJykuaXNMZW5ndGgoe21pbjo0ICwgbWF4IDoxNTB9KSxcbiAgY2hlY2soJ2RvY3VtZW50X251bWJlcicsJ2ludmFsaWRlIEROSScpLmlzTGVuZ3RoKHttYXggOjE1fSksXG4gIGNoZWNrKCdjb3VudHJ5JywnaW52YWxpZGUgY291bnRyeScpLmlzTGVuZ3RoKHttaW46NCwgbWF4OjEwMH0pLFxuICBjaGVjaygnIGJpcmRfZGF0ZScsJ2ludmFsaWRlIGZvcm1hdCBkYXRlJykuaXNMZW5ndGgoe21heDoxNX0pXG4gIC8vY29uc29sZS5sb2coXCJkYXRvcyBsZWlkb3MgOiBcIiArIHJlcS5ib2R5LmZpcnN0X25hbWUrJyAnICtyZXEuYm9keS5sYXN0X25hbWUrJyAnK3JlcS5ib2R5LmRvY3VtZW50X251bWJlcisnICcrcmVxLmJvZHkuY291bnRyeSlcblxuXSwgZnVuY3Rpb24ocmVxLHJlcyl7XG4gICAgICAgIGNvbnN0IGVycm9ycyA9IHZhbGlkYXRpb25SZXN1bHQocmVxKTtcbiAgICAgICAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuICAgICAgaWYgKCFlcnJvcnMuaXNFbXB0eSgpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdkZW50cm8gZGVsIGlmJyk7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9ycyk7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQyMikuanNvbih7IGVycm9yczogZXJyb3JzLmFycmF5KCkgfSk7XG4gICAgICAgIHJlcy5yZW5kZXIoJ2Vycm9yJywgeyB0aXRsZTogJ1VTVUFSSU8gSU5TRVJUQURPIFBPU1QnLCBlcnJvciB9KTtcbiAgICAgIH1lbHNlIHtcbiAgICAgICAgbGV0IGZpcnN0X25hbWUgPSByZXEuYm9keS5maXJzdF9uYW1lO1xuICAgICAgICBsZXQgbGFzdF9uYW1lID0gcmVxLmJvZHkubGFzdF9uYW1lO1xuICAgICAgICBsZXQgZG9jdW1lbnRfbnVtYmVyID0gcmVxLmJvZHkuZG9jdW1lbnRfbnVtYmVyO1xuICAgICAgICBsZXQgY291bnRyeSA9IHJlcS5ib2R5LmNvdW50cnk7ICAgXG4gICAgICAgIGxldCBiaXJkX2RhdGUgPSByZXEuYm9keS5iaXJkX2RhdGU7XG4gICAgICAvLyAgIHJlcy5zZW5kKHt9KTtcbiAgICAgIC8vIH0gXG4gIGNvbnN0IGRhdGEgPSBbXTtcblxuICBteVNxbENvbm5lY3Rpb25GYWN0b3J5KCkudGhlbihjb25uZWN0aW9uID0+IHtcbiAgICBjb25zdCBxdWVyeSA9ICAnSU5TRVJUIElOVE8gcGVyc29uYWxfZGF0YSAoZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBkb2N1bWVudF9udW1iZXIsIGNvdW50cnkpIFZBTFVFUyAoPyw/LD8sPyk7JztcbiAgICBjb25uZWN0aW9uLnF1ZXJ5KHF1ZXJ5LCBbZmlyc3RfbmFtZSxsYXN0X25hbWUsZG9jdW1lbnRfbnVtYmVyLGNvdW50cnldKTtcbiAgICBcbiAgICBcbiAgICAvL2NvbnNvbGUubG9nKCcqKioqKiogZmluIGluc2VydCBwZXJzb25hbF9kYXRhICoqKioqKionKTtcblxuICAgIGNvbnN0IHF1ZXJ5MiA9IFwiSU5TRVJUIElOVE8gZ3Vlc3QgKHBlcnNvbmFsX2RhdGFfaWQsIGJpcmRfZGF0ZSkgVkFMVUVTICggTEFTVF9JTlNFUlRfSUQoKSAsU1RSX1RPX0RBVEUoID8gLCclZC0lbS0lWScpKVwiO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnkyLFtiaXJkX2RhdGVdKTtcbiAgICAvL2NvbnNvbGUubG9nKCd1bHRpbW8gcmVnaXN0cm8gY3VzdG9tZXIgaW5zZXJ0YWRvIDonICsgTEFTVF9JTlNFUlRfSUQoKSk7XG4gICAgY29uc29sZS5sb2coJyoqKioqKioqKipmaW4gaW5zZXJ0IGd1ZXN0ICoqKioqKioqKioqKionKVxuICAgICAgLy8ub24oJ2Vycm9yJywgZXJyb3IgPT4gcmVzLnJlbmRlcignZXJyb3InLCB7IHRpdGxlOiAnVVNVQVJJTyBJTlNFUlRBRE8gUE9TVCcsIGVycm9yIH0pKVxuICAgICAgLy8ub24oJ3Jlc3VsdCcsIHJvdyA9PmNvbnNvbGUubG9nKHJvdykpXG4gICAgICAvLy5vbigncmVzdWx0Jywgcm93ID0+Y29uc29sZS5sb2coJ2lkIFBlcnNvbmFsIERhdGEgOiAnKyBpZEN1c3RvbWVyKSlcbiAgICAgIC8vLm9uKCdlbmQnLCAoKSA9PiByZXMuc2VuZCgyMDApKTtcbiAgfSkuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICByZXMuc2VuZCgncmVzcG9uZCB3aXRoIGEgcmVzb3VyY2UnKTtcbiAgfSBcbiB9KTtcblxuXG5cblxuLyoqKioqKioqKioqKioqKioqKioqKiBSRUdJU1RSTyBBUEFSVE1FTlRTICAqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqIFBPU1QgKC9yZWdpc3Ryby9ndWVzdCkgKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLy8gYXBwLnBvc3QoJy9hcGFydG1lbnRzJyxcbi8vIFtcbiBcbi8vICAgY2hlY2soJ2FkcmVzcycsJ2ludmFsaWRlIG5hbWUnKS5pc0xlbmd0aCh7bWluOjQgLCBtYXggOjE1MH0pLFxuLy8gICAvL2NoZWNrKCd1cmwnLCdpbnZhbGlkZSBsYXN0IG5hbWUnKS5pc0xlbmd0aCh7bWluOjQgLCBtYXggOjE1MH0pLFxuLy8gICBjaGVjaygnbnVtYmVyX3Jvb21zJywnbnVtYmVyIGdyZWF0ZXIgdGhhbiB6ZXJvJykuaXNMZW5ndGgoe21heCA6MTV9KSxcbi8vICAgY2hlY2soJ3Bvc3RhbF9jb2RlJywnaW52YWxpZCBwb3N0YWwgY29kZScpLmlzSW50KCksXG4gIFxuLy8gICAvL2NvbnNvbGUubG9nKFwiZGF0b3MgbGVpZG9zIDogXCIgKyByZXEuYm9keS5maXJzdF9uYW1lKycgJyArcmVxLmJvZHkubGFzdF9uYW1lKycgJytyZXEuYm9keS5kb2N1bWVudF9udW1iZXIrJyAnK3JlcS5ib2R5LmNvdW50cnkpXG5cbi8vIF0sIGZ1bmN0aW9uKHJlcSxyZXMpe1xuLy8gICAgICAgICBjb25zdCBlcnJvcnMgPSB2YWxpZGF0aW9uUmVzdWx0KHJlcSk7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5KTtcbi8vICAgICAgIGlmICghZXJyb3JzLmlzRW1wdHkoKSkge1xuLy8gICAgICAgICBjb25zb2xlLmxvZygnZGVudHJvIGRlbCBpZicpO1xuLy8gICAgICAgICBjb25zb2xlLmxvZyhlcnJvcnMpO1xuLy8gICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MjIpLmpzb24oeyBlcnJvcnM6IGVycm9ycy5hcnJheSgpIH0pO1xuLy8gICAgICAgICByZXMucmVuZGVyKCdlcnJvcicsIHsgdGl0bGU6ICdVU1VBUklPIElOU0VSVEFETyBQT1NUJywgZXJyb3IgfSk7XG4vLyAgICAgICB9ZWxzZSB7XG4vLyAgICAgICAgIGxldCBhZHJlc3MgPSByZXEuYm9keS5hZHJlc3M7XG4vLyAgICAgICAgIGNvbnN0IHVybCA9IFwiLi4vdXBsb2Fkcy9cIjtcbi8vICAgICAgICAgbGV0IG51bWJlcl9yb29tcyA9IHJlcS5ib2R5Lm51bWJlcl9yb29tcztcbi8vICAgICAgICAgbGV0IHBvc3RhbF9jb2RlID0gcmVxLmJvZHkucG9zdGFsX2NvZGU7ICAgXG4gICAgICAgIFxuLy8gICAgICAgLy8gICByZXMuc2VuZCh7fSk7XG4vLyAgICAgICAvLyB9IFxuLy8gICBjb25zdCBkYXRhID0gW107XG5cbi8vICAgbXlTcWxDb25uZWN0aW9uRmFjdG9yeSgpLnRoZW4oY29ubmVjdGlvbiA9PiB7XG4vLyAgICAgY29uc3QgcXVlcnkgPSAgJ0lOU0VSVCBJTlRPIGFwYXJ0bWVudHMgKGFkcmVzcywgdXJsLCBudW1iZXJfcm9vbXMsIHBvc3RhbF9jb2RlKSBWQUxVRVMgKD8sPyw/LD8pOyc7XG4vLyAgICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW2FkcmVzcyx1cmwsbnVtYmVyX3Jvb21zLHBvc3RhbF9jb2RlXSk7XG4vLyAgICAgbGV0IGlkQXBhcnRtZW50ID0gTEFTVF9JTlNFUlRfSUQoKTsgICAgXG4vLyAgICAgY29uc29sZS5sb2coJyoqKioqKiBmaW4gaW5zZXJ0IGFwYXJ0bWVudHMgKioqKioqKicpXG4gICBcbi8vICAgICAgIC8vLm9uKCdlcnJvcicsIGVycm9yID0+IHJlcy5yZW5kZXIoJ2Vycm9yJywgeyB0aXRsZTogJ1VTVUFSSU8gSU5TRVJUQURPIFBPU1QnLCBlcnJvciB9KSlcbi8vICAgICAgIC5vbigncmVzdWx0Jywgcm93ID0+Y29uc29sZS5sb2cocm93KSlcbi8vICAgICAgIC8vLm9uKCdyZXN1bHQnLCByb3cgPT5jb25zb2xlLmxvZygnaWQgUGVyc29uYWwgRGF0YSA6ICcrIGlkQ3VzdG9tZXIpKVxuLy8gICAgICAgLy8ub24oJ2VuZCcsICgpID0+IHJlcy5zZW5kKDIwMCkpO1xuLy8gICB9KS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4vLyAgIHJlcy5zZW5kKCdyZXNwb25kIHdpdGggYSByZXNvdXJjZScpO1xuLy8gICB9IFxuLy8gIH0pO1xuXG5cbi8qKioqKioqKioqKioqKioqKioqKioqKiogUkVHSVNUUk8gQk9PS0lORyAgKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKiBQT1NUICgvcmVnaXN0cm8vYm9va2luZykgKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuYXBwLnBvc3QoJy9ib29raW5nJyxcbltcbiAgY2hlY2soJ2FkcmVzcycsJ2RlYmUgc2VsZWNjaW9uYXIgdW5hIG9wY2lvbicpLmlzTGVuZ3RoKHttYXg6MTUwfSksXG4gIGNoZWNrKCdhcnJpdmFsX2RhdGUnLCdpbnZhbGlkZSBmb3JtYW50IGRhdGUnKS5pc0xlbmd0aCh7bWF4OjE1fSksXG4gIGNoZWNrKCdkZXBhcnR1cmVfZGF0ZScsJ2ludmFsaWRlIGZvcm1hbnQgZGF0ZScpLmlzTGVuZ3RoKHttYXg6MTV9KSxcbiAgY2hlY2soJ251bV9ndWVzdCcsJ251bWJlciBncmVhdGVyIHRoYW4gemVybycpLmlzSW50KClcbiAgXG5dLCBmdW5jdGlvbihyZXEscmVzKXtcbiAgICAgICAgY29uc3QgZXJyb3JzID0gdmFsaWRhdGlvblJlc3VsdChyZXEpO1xuICAgICAgICBjb25zb2xlLmxvZyhyZXEuYm9keSk7XG4gICAgICBpZiAoIWVycm9ycy5pc0VtcHR5KCkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2RlbnRybyBkZWwgaWYnKTtcbiAgICAgICAgY29uc29sZS5sb2coZXJyb3JzKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDIyKS5qc29uKHsgZXJyb3JzOiBlcnJvcnMuYXJyYXkoKSB9KTtcbiAgICAgICAgcmVzLnJlbmRlcignZXJyb3InLCB7IHRpdGxlOiAnVVNVQVJJTyBJTlNFUlRBRE8gUE9TVCcsIGVycm9yIH0pO1xuICAgICAgfWVsc2Uge1xuICAgICAgICBsZXQgYWRyZXNzID0gcmVxLmJvZHkuYWRyZXNzO1xuICAgICAgICBsZXQgY29kZSA9IGdlbmVyYXRvckNvZGU7XG4gICAgICAgIGxldCBhcnJpdmFsX2RhdGUgPSByZXEuYm9keS5hcnJpdmFsX2RhdGU7XG4gICAgICAgIGxldCBkZXBhcnR1cmVfZGF0ZSA9IHJlcS5ib2R5LmRlcGFydHVyZV9kYXRlO1xuICAgICAgICBsZXQgbnVtX2d1ZXN0ID0gcmVxLmJvZHkuY291bnRyeTsgICBcbiAgICAgICAgXG4gICAgICAvLyAgIHJlcy5zZW5kKHt9KTtcbiAgICAgIC8vIH0gXG4gIGNvbnN0IGRhdGEgPSBbXTtcbiAgIC8vY29uc29sZS5sb2coXCJpZGN1c3RvbWVyIDpcIiArIGlkQ3VzdG9tZXIpOyAgICAgXG4gIG15U3FsQ29ubmVjdGlvbkZhY3RvcnkoKS50aGVuKGNvbm5lY3Rpb24gPT4ge1xuICAgIGxldCAgaWRBcGFydG1lbnQgPSBjb25uZWN0aW9uLnF1ZXJ5KFwiU0VMRUNUIGlkIEZST00gYXBhcnRtZW50cyBXSEVSRSBhZHJlc3MgPSA/IFwiLFthZHJlc3NdKVxuICAgIGNvbnNvbGUubG9nKFwiSWRBcGFydG1lbnQgOiBcIisgaWRBcGFydG1lbnQpO1xuICAgIGxldCBpZEN1c3RvbWVyID0gY29ubmVjdGlvbi5xdWVyeShcIlNFTEVDVCBwZXJzb25hbF9kYXRhX2lkIEZST00gY3VzdG9tZXIgT1JERVIgQlkgcGVyc29uYWxfZGF0YV9pZCBERVNDIExJTUlUIDE7XCIpO1xuICAgIGNvbnNvbGUubG9nKFwiSWRDdXN0b21lcjogXCIrIGlkQ3VzdG9tZXIpO1xuICAgIGNvbnN0IHF1ZXJ5MiA9ICBcIklOU0VSVCBJTlRPIGJvb2tpbmcgKGNvZGUsIGFycml2YWxfZGF0ZSwgZGVwYXJ0dXJlX2RhdGUsIG51bV9ndWVzdCwgY3VzdG9tZXJfcGVyc29uYWxfZGF0YV9pZCwgYXBhcnRtZW50c19pZCkgVkFMVUVTICggU1RSX1RPX0RBVEUoID8gLCclZC0lbS0lWScpLCBTVFJfVE9fREFURSggPyAsJyVkLSVtLSVZJyksPyw/LD8sPyk7XCI7XG4gICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeTIsIFtjb2RlLGFycml2YWxfZGF0ZSxkZXBhcnR1cmVfZGF0ZSxudW1fZ3Vlc3QsaWRDdXN0b21lciwgaWRBcGFydG1lbnRdKTtcbiAgICAgICAgXG4gICAgY29uc29sZS5sb2coJyoqKioqKiBmaW4gaW5zZXJ0IGJvb2tpbmcgKioqKioqKicpXG5cbiAgICAgICAgLm9uKCdyZXN1bHQnLCByb3cgPT5jb25zb2xlLmxvZyhyb3cpKVxuICAgICAgLy8ub24oJ3Jlc3VsdCcsIHJvdyA9PmNvbnNvbGUubG9nKCdpZCBQZXJzb25hbCBEYXRhIDogJysgaWRDdXN0b21lcikpXG4gICAgICAvLy5vbignZW5kJywgKCkgPT4gcmVzLnNlbmQoMjAwKSk7XG4gIH0pLmNhdGNoKGVycm9yID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAgcmVzLnNlbmQoJ3Jlc3BvbmQgd2l0aCBhIHJlc291cmNlJyk7XG4gIH0gXG4gfSk7XG5cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAvKioqKioqKioqKioqKioqKioqKioqKiogUFVUIHVzZXJzIGxpc3RpbmcuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbmFwcC5wdXQoJy86aWQnLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuXG4gIGNvbnNvbGUubG9nKCdkZW50cm8gZGUgUFVUJyk7XG4gIGxldCBpZCA9IHJlcS5wYXJhbS5pZDtcbiAgbGV0IGZpcnN0X25hbWUgPSByZXEuYm9keS5maXJzdF9uYW1lO1xuICBsZXQgbGFzdF9uYW1lID0gcmVxLmJvZHkubGFzdF9uYW1lO1xuICBsZXQgZG9jdW1lbnRfbnVtYmVyID0gcmVxLmJvZHkuZG9jdW1lbnRfbnVtYmVyO1xuICBsZXQgY291bnRyeSA9IHJlcS5ib2R5LmNvdW50cnk7XG5cbiAgY29uc3QgZGF0YSA9IFtdO1xuXG4gIG15U3FsQ29ubmVjdGlvbkZhY3RvcnkoeyB9KS50aGVuKGNvbm5lY3Rpb24gPT4ge1xuICAgIGNvbnN0IHF1ZXJ5ID0gICdVUERBVEUgcGVyc29uYWxfZGF0YSAoZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBkb2N1bWVudF9udW1iZXIsIGNvdW50cnkpIFNFVCB2YWx1ZSA9ICg/LD8sPyw/KSBXSEVSRSBpZCA9ID8nO1xuICAgIGNvbm5lY3Rpb24ucXVlcnkocXVlcnksIFtpZCwgZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBkb2N1bWVudF9udW1iZXIsIGNvdW50cnldKVxuICAgICAgLm9uKCdlcnJvcicsIGVycm9yID0+IHJlcy5yZW5kZXIoJ2Vycm9yJywgeyB0aXRsZTogJ0V4cHJlc3MnLCBlcnJvciB9KSlcbiAgICAgIC5vbigncmVzdWx0Jywgcm93ID0+Y29uc29sZS5sb2cocm93KSlcbiAgICAgIC8vLm9uKCdlbmQnLCAoKSA9PiByZXMuc2VuZCgyMDApKTtcbiAgfSkuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICBcblxucmVzLnNlbmQoJ3Jlc3BvbmQgd2l0aCBhIHJlc291cmNlJyk7XG5cbiB9KTtcblxuXG5cbiBcblxuIFxuXG4gLyoqKioqKioqKioqKioqKioqKioqKioqKioqIERFTEVURSB1c2VycyBsaXN0aW5nLiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuYXBwLmRlbGV0ZSgnLzppZCcsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG5cbiAgbGV0IGlkID0gcmVxLnBhcmFtcy5pZDtcbiAgXG4gIGNvbnN0IGRhdGEgPSBbXTtcblxuICBteVNxbENvbm5lY3Rpb25GYWN0b3J5KHsgfSkudGhlbihjb25uZWN0aW9uID0+IHtcbiAgICBjb25zdCBxdWVyeSA9ICdERUxFVEUgKiBGUk9NIHBlcnNvbmFsX2RhdGEgV0hFUkUgaWQ9Pyc7XG4gICAgY29ubmVjdGlvbi5xdWVyeShxdWVyeSwgW2lkXSlcbiAgICAgIC5vbignZXJyb3InLCBlcnJvciA9PiByZXMucmVuZGVyKCdlcnJvcicsIHsgdGl0bGU6ICdFeHByZXNzJywgZXJyb3IgfSkpXG4gICAgICAub24oJ3Jlc3VsdCcsIHJvdyA9PmNvbnNvbGUubG9nKHJvdykpXG4gICAgICAvLy5vbignZW5kJywgKCkgPT4gcmVzLnNlbmQoMjAwKSk7XG4gIH0pLmNhdGNoKGVycm9yID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAgXG5cbiAgcmVzLnNlbmQoJ3Jlc3BvbmQgd2l0aCBhIHJlc291cmNlJyk7XG5cbiB9KTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcblxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "check",
        "validationResult",
        "param",
        "query",
        "cookies",
        "header",
        "body",
        "app",
        "get",
        "req",
        "res",
        "next",
        "data",
        "then",
        "connection",
        "on",
        "error",
        "console",
        "title",
        "row",
        "push",
        "id",
        "first_name",
        "last_name",
        "document_number",
        "country",
        "render",
        "log",
        "userId",
        "params",
        "send",
        "post",
        "isLength",
        "min",
        "max",
        "isEmail",
        "errors",
        "isEmpty",
        "status",
        "json",
        "array",
        "contact_email",
        "err",
        "result",
        "idCustomer",
        "insertId",
        "query2",
        "bird_date",
        "isInt",
        "adress",
        "code",
        "generatorCode",
        "arrival_date",
        "departure_date",
        "num_guest",
        "idApartment",
        "put"
      ],
      "mappings": "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",
      "sourceRoot": "/home/henry/expressmysql/routes",
      "sourcesContent": [
        "import express from 'express';\nimport expressValidator from 'express-validator';\nimport mySqlConnectionFactory from '../mysql/MySqlConnectionFactory';\nimport generatorCode from '../public/javascripts/generatorCode';\n\nconst { check, validationResult } = require('express-validator');\nconst { param, query, cookies, header, body} = require ('express-validator'); \nconst app = express();\n//const server = express(); \napp.get('/', function(req, res, next) {\n  \n  const data = [];\n // const idCustomer = \"\";\n  mySqlConnectionFactory({ }).then(connection => {\n    const query = 'SELECT * FROM personal_data';\n    connection.query(query)\n      //.on('error', error => res.render('error', { title: 'Express', error }))\n      .on('error', error => console.error('error', { title: 'USUARIOS', error }))\n      .on('result', row => data.push({ id: row.id, first_name: row.first_name, last_name: row.last_name, document_number: row.document_number, country:row.country}))\n      //.on('result', row =>console.log(row))\n      .on('end', () => res.render('index', { title: 'USUARIOS', data }));\n  }).catch(error => console.error(error));\n  \n});\n\n/***************  GET by ID users listing. ************************/\napp.get('/:id', function(req, res, next) {\n  console.log('dentro de get/id');\n  let userId = req.params.id;\n  console.log(userId);\n  let data = [];\n\n  mySqlConnectionFactory({ }).then(connection => {\n    const query = 'SELECT * FROM personal_data WHERE id = ?';\n    console.log(userId);\n    connection.query(query,[userId])\n    \n      .on('error', error => res.render('error', { title: 'USUARIOS POR ID', error }))\n      .on('result', row => data = row)\n      .on('result', row =>console.log(row))\n      .on('end', () => res.render('userid', { title: 'USUARIOS POR ID', data }))\n      .on('end', () => res.send(200));\n  }).catch(error => console.error(error));\n  \n\n // res.send('respond with a resource');\n});\n/************************************************************************/\n/************************************************************************/\n\n/************************ REGISTRO CUSTOMER  *****************************/\n/******************* POST (/registro/customer) ***************************/\napp.post('/customer',\n[\n  check('first_name','invalide name').isLength({min:4 , max :150}),\n  check('last_name','invalide last name').isLength({min:4 , max :150}),\n  check('document_number','invalide DNI').isLength({max :15}),\n  check('country','invalide country').isLength({min:4, max:100}),\n  check('contact_email','invalide email').isEmail()\n  //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n], function(req,res){\n        const errors = validationResult(req);\n        console.log(req.body);\n      if (!errors.isEmpty()) {\n        console.log('dentro del if');\n        console.log(errors);\n        return res.status(422).json({ errors: errors.array() });\n        res.render('error', { title: 'USUARIO INSERTADO POST', error });\n      }else {\n        let first_name = req.body.first_name;\n        let last_name = req.body.last_name;\n        let document_number = req.body.document_number;\n        let country = req.body.country;   \n        let contact_email = req.body.contact_email;\n      //   res.send({});\n      // } \n  const data = [];\n\n  mySqlConnectionFactory().then(connection => {\n    const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n    connection.query(query, [first_name,last_name,document_number,country], function(err, result){\n      if (err) throw err;\n      let idCustomer =  result.insertId;\n      console.log(\"customer ultimo id : \" + idCustomer);\n    });\n    \n    //console.log('****** fin insert personal_data *******');\n\n    const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n    connection.query(query2,[contact_email]);\n   \n    console.log('**********fin insert customer *************')\n      //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n      //.on('result', row =>console.log(row))\n      //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n      //.on('end', () => res.send(200));\n  }).catch(error => console.error(error));\n  res.send('respond with a resource');\n  } \n });\n\n /************************ REGISTRO GUEST  *****************************/\n/******************* POST (/registro/guest) ***************************/\napp.post('/guest',\n[\n \n  check('first_name','invalide name').isLength({min:4 , max :150}),\n  check('last_name','invalide last name').isLength({min:4 , max :150}),\n  check('document_number','invalide DNI').isLength({max :15}),\n  check('country','invalide country').isLength({min:4, max:100}),\n  check(' bird_date','invalide format date').isLength({max:15})\n  //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n], function(req,res){\n        const errors = validationResult(req);\n        console.log(req.body);\n      if (!errors.isEmpty()) {\n        console.log('dentro del if');\n        console.log(errors);\n        return res.status(422).json({ errors: errors.array() });\n        res.render('error', { title: 'USUARIO INSERTADO POST', error });\n      }else {\n        let first_name = req.body.first_name;\n        let last_name = req.body.last_name;\n        let document_number = req.body.document_number;\n        let country = req.body.country;   \n        let bird_date = req.body.bird_date;\n      //   res.send({});\n      // } \n  const data = [];\n\n  mySqlConnectionFactory().then(connection => {\n    const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n    connection.query(query, [first_name,last_name,document_number,country]);\n    \n    \n    //console.log('****** fin insert personal_data *******');\n\n    const query2 = \"INSERT INTO guest (personal_data_id, bird_date) VALUES ( LAST_INSERT_ID() ,STR_TO_DATE( ? ,'%d-%m-%Y'))\";\n    connection.query(query2,[bird_date]);\n    //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n    console.log('**********fin insert guest *************')\n      //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n      //.on('result', row =>console.log(row))\n      //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n      //.on('end', () => res.send(200));\n  }).catch(error => console.error(error));\n  res.send('respond with a resource');\n  } \n });\n\n\n\n\n/********************* REGISTRO APARTMENTS  **************************/\n/******************* POST (/registro/guest) ***************************/\n// app.post('/apartments',\n// [\n \n//   check('adress','invalide name').isLength({min:4 , max :150}),\n//   //check('url','invalide last name').isLength({min:4 , max :150}),\n//   check('number_rooms','number greater than zero').isLength({max :15}),\n//   check('postal_code','invalid postal code').isInt(),\n  \n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let adress = req.body.adress;\n//         const url = \"../uploads/\";\n//         let number_rooms = req.body.number_rooms;\n//         let postal_code = req.body.postal_code;   \n        \n//       //   res.send({});\n//       // } \n//   const data = [];\n\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO apartments (adress, url, number_rooms, postal_code) VALUES (?,?,?,?);';\n//     connection.query(query, [adress,url,number_rooms,postal_code]);\n//     let idApartment = LAST_INSERT_ID();    \n//     console.log('****** fin insert apartments *******')\n   \n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n\n/************************ REGISTRO BOOKING  *****************************/\n/******************* POST (/registro/booking) ***************************/\napp.post('/booking',\n[\n  check('adress','debe seleccionar una opcion').isLength({max:150}),\n  check('arrival_date','invalide formant date').isLength({max:15}),\n  check('departure_date','invalide formant date').isLength({max:15}),\n  check('num_guest','number greater than zero').isInt()\n  \n], function(req,res){\n        const errors = validationResult(req);\n        console.log(req.body);\n      if (!errors.isEmpty()) {\n        console.log('dentro del if');\n        console.log(errors);\n        return res.status(422).json({ errors: errors.array() });\n        res.render('error', { title: 'USUARIO INSERTADO POST', error });\n      }else {\n        let adress = req.body.adress;\n        let code = generatorCode;\n        let arrival_date = req.body.arrival_date;\n        let departure_date = req.body.departure_date;\n        let num_guest = req.body.country;   \n        \n      //   res.send({});\n      // } \n  const data = [];\n   //console.log(\"idcustomer :\" + idCustomer);     \n  mySqlConnectionFactory().then(connection => {\n    let  idApartment = connection.query(\"SELECT id FROM apartments WHERE adress = ? \",[adress])\n    console.log(\"IdApartment : \"+ idApartment);\n    let idCustomer = connection.query(\"SELECT personal_data_id FROM customer ORDER BY personal_data_id DESC LIMIT 1;\");\n    console.log(\"IdCustomer: \"+ idCustomer);\n    const query2 =  \"INSERT INTO booking (code, arrival_date, departure_date, num_guest, customer_personal_data_id, apartments_id) VALUES ( STR_TO_DATE( ? ,'%d-%m-%Y'), STR_TO_DATE( ? ,'%d-%m-%Y'),?,?,?,?);\";\n    connection.query(query2, [code,arrival_date,departure_date,num_guest,idCustomer, idApartment]);\n        \n    console.log('****** fin insert booking *******')\n\n        .on('result', row =>console.log(row))\n      //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n      //.on('end', () => res.send(200));\n  }).catch(error => console.error(error));\n  res.send('respond with a resource');\n  } \n });\n\n\n/*********************************************************************************/\n /*********************** PUT users listing. ************************************/\napp.put('/:id', function(req, res, next) {\n\n  console.log('dentro de PUT');\n  let id = req.param.id;\n  let first_name = req.body.first_name;\n  let last_name = req.body.last_name;\n  let document_number = req.body.document_number;\n  let country = req.body.country;\n\n  const data = [];\n\n  mySqlConnectionFactory({ }).then(connection => {\n    const query =  'UPDATE personal_data (first_name, last_name, document_number, country) SET value = (?,?,?,?) WHERE id = ?';\n    connection.query(query, [id, first_name, last_name, document_number, country])\n      .on('error', error => res.render('error', { title: 'Express', error }))\n      .on('result', row =>console.log(row))\n      //.on('end', () => res.send(200));\n  }).catch(error => console.error(error));\n  \n\nres.send('respond with a resource');\n\n });\n\n\n\n \n\n \n\n /************************** DELETE users listing. ****************************/\napp.delete('/:id', function(req, res, next) {\n\n  let id = req.params.id;\n  \n  const data = [];\n\n  mySqlConnectionFactory({ }).then(connection => {\n    const query = 'DELETE * FROM personal_data WHERE id=?';\n    connection.query(query, [id])\n      .on('error', error => res.render('error', { title: 'Express', error }))\n      .on('result', row =>console.log(row))\n      //.on('end', () => res.send(200));\n  }).catch(error => console.error(error));\n  \n\n  res.send('respond with a resource');\n\n });\n\n\n\nexport default app;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574069750335
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/mysql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/mysql/MySqlConnectionFactory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/mysql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/mysql/MySqlConnectionFactory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/mysql/MySqlConnectionFactory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/mysql/MySqlConnectionFactory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/mysql",
        "sourceFileName": "MySqlConnectionFactory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar mySqlConnectionFactory = function mySqlConnectionFactory(configuration) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var mySqlConnection = _mysql[\"default\"].createConnection(_objectSpread({}, {\n        host: 'localhost',\n        port: 13306,\n        user: 'fastcheckin',\n        password: 'fastcheckin',\n        database: 'fastcheckin'\n      }, {}, configuration));\n\n      mySqlConnection.connect(function (err) {\n        err ? reject(err) : resolve(mySqlConnection);\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nvar _default = mySqlConnectionFactory;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk15U3FsQ29ubmVjdGlvbkZhY3RvcnkuanMiXSwibmFtZXMiOlsibXlTcWxDb25uZWN0aW9uRmFjdG9yeSIsImNvbmZpZ3VyYXRpb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIm15U3FsQ29ubmVjdGlvbiIsIm15c3FsIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJwb3J0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJjb25uZWN0IiwiZXJyIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztBQUVBLElBQU1BLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBeUIsQ0FBQUMsYUFBYTtBQUFBLFNBQUksSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUMvRSxRQUFJO0FBQ0YsVUFBTUMsZUFBZSxHQUFHQyxrQkFBTUMsZ0JBQU4sbUJBQTJCO0FBQ2pEQyxRQUFBQSxJQUFJLEVBQUUsV0FEMkM7QUFFakRDLFFBQUFBLElBQUksRUFBRSxLQUYyQztBQUdqREMsUUFBQUEsSUFBSSxFQUFFLGFBSDJDO0FBSWpEQyxRQUFBQSxRQUFRLEVBQUcsYUFKc0M7QUFLakRDLFFBQUFBLFFBQVEsRUFBRTtBQUx1QyxPQUEzQixNQU1sQlgsYUFOa0IsRUFBeEI7O0FBUUFJLE1BQUFBLGVBQWUsQ0FBQ1EsT0FBaEIsQ0FBd0IsVUFBU0MsR0FBVCxFQUFjO0FBQ3BDQSxRQUFBQSxHQUFHLEdBQUdWLE1BQU0sQ0FBQ1UsR0FBRCxDQUFULEdBQWlCWCxPQUFPLENBQUNFLGVBQUQsQ0FBM0I7QUFDRCxPQUZEO0FBR0QsS0FaRCxDQVlFLE9BQU9VLEtBQVAsRUFBYztBQUNkWCxNQUFBQSxNQUFNLENBQUNXLEtBQUQsQ0FBTjtBQUNEO0FBQ0YsR0FoQitDLENBQUo7QUFBQSxDQUE1Qzs7ZUFrQmVmLHNCIiwic291cmNlUm9vdCI6Ii9ob21lL2hlbnJ5L2V4cHJlc3NteXNxbC9teXNxbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBteXNxbCBmcm9tICdteXNxbCc7XG5cbmNvbnN0IG15U3FsQ29ubmVjdGlvbkZhY3RvcnkgPSBjb25maWd1cmF0aW9uID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBteVNxbENvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHsuLi57XG4gICAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgICAgIHBvcnQ6IDEzMzA2LFxuICAgICAgdXNlcjogJ2Zhc3RjaGVja2luJyxcbiAgICAgIHBhc3N3b3JkIDogJ2Zhc3RjaGVja2luJyxcbiAgICAgIGRhdGFiYXNlOiAnZmFzdGNoZWNraW4nXG4gICAgfSwgLi4uY29uZmlndXJhdGlvbiB9KTtcblxuICAgIG15U3FsQ29ubmVjdGlvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xuICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKG15U3FsQ29ubmVjdGlvbik7XG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG15U3FsQ29ubmVjdGlvbkZhY3Rvcnk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "MySqlConnectionFactory.js"
      ],
      "names": [
        "mySqlConnectionFactory",
        "configuration",
        "Promise",
        "resolve",
        "reject",
        "mySqlConnection",
        "mysql",
        "createConnection",
        "host",
        "port",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;AAEA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,aAAa;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/E,QAAI;AACF,UAAMC,eAAe,GAAGC,kBAAMC,gBAAN,mBAA2B;AACjDC,QAAAA,IAAI,EAAE,WAD2C;AAEjDC,QAAAA,IAAI,EAAE,KAF2C;AAGjDC,QAAAA,IAAI,EAAE,aAH2C;AAIjDC,QAAAA,QAAQ,EAAG,aAJsC;AAKjDC,QAAAA,QAAQ,EAAE;AALuC,OAA3B,MAMlBX,aANkB,EAAxB;;AAQAI,MAAAA,eAAe,CAACQ,OAAhB,CAAwB,UAASC,GAAT,EAAc;AACpCA,QAAAA,GAAG,GAAGV,MAAM,CAACU,GAAD,CAAT,GAAiBX,OAAO,CAACE,eAAD,CAA3B;AACD,OAFD;AAGD,KAZD,CAYE,OAAOU,KAAP,EAAc;AACdX,MAAAA,MAAM,CAACW,KAAD,CAAN;AACD;AACF,GAhB+C,CAAJ;AAAA,CAA5C;;eAkBef,sB",
      "sourceRoot": "/home/henry/expressmysql/mysql",
      "sourcesContent": [
        "import mysql from 'mysql';\n\nconst mySqlConnectionFactory = configuration => new Promise((resolve, reject) => {\n  try {\n    const mySqlConnection = mysql.createConnection({...{\n      host: 'localhost',\n      port: 13306,\n      user: 'fastcheckin',\n      password : 'fastcheckin',\n      database: 'fastcheckin'\n    }, ...configuration });\n\n    mySqlConnection.connect(function(err) {\n      err ? reject(err) : resolve(mySqlConnection);\n    });\n  } catch (error) {\n    reject(error);\n  }\n});\n\nexport default mySqlConnectionFactory;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573466803411
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/routes/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\n/* GET users listing. */\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBYjtBQUVBOztBQUNBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDdkNELEVBQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTLHlCQUFUO0FBQ0QsQ0FGRDtBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2hlbnJ5L2V4cHJlc3NteXNxbC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vKiBHRVQgdXNlcnMgbGlzdGluZy4gKi9cbnJvdXRlci5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICByZXMuc2VuZCgncmVzcG9uZCB3aXRoIGEgcmVzb3VyY2UnKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,yBAAT;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/home/henry/expressmysql/routes",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET users listing. */\nrouter.get('/', function(req, res, next) {\n  res.send('respond with a resource');\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573121638871
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/public/javascripts\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/public/javascripts/generatorCode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/public/javascripts",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/public/javascripts/generatorCode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/public/javascripts/generatorCode.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/public/javascripts/generatorCode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/public/javascripts",
        "sourceFileName": "generatorCode.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction makeid() {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var numGen = 10;\n\n  for (var i = 0; i < numGen; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRvckNvZGUuanMiXSwibmFtZXMiOlsibWFrZWlkIiwicmVzdWx0IiwiY2hhcmFjdGVycyIsIm51bUdlbiIsImkiLCJjaGFyQXQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJjaGFyYWN0ZXJzTGVuZ3RoIl0sIm1hcHBpbmdzIjoiOztBQUFBLFNBQVNBLE1BQVQsR0FBa0I7QUFDZCxNQUFJQyxNQUFNLEdBQWEsRUFBdkI7QUFDQSxNQUFJQyxVQUFVLEdBQVMsZ0VBQXZCO0FBQ0EsTUFBTUMsTUFBTSxHQUFHLEVBQWY7O0FBQ0EsT0FBTSxJQUFJQyxDQUFDLEdBQUcsQ0FBZCxFQUFpQkEsQ0FBQyxHQUFHRCxNQUFyQixFQUE2QkMsQ0FBQyxFQUE5QixFQUFtQztBQUNoQ0gsSUFBQUEsTUFBTSxJQUFJQyxVQUFVLENBQUNHLE1BQVgsQ0FBa0JDLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0JDLGdCQUEzQixDQUFsQixDQUFWO0FBQ0Y7O0FBQ0QsU0FBT1IsTUFBUDtBQUNGIiwic291cmNlUm9vdCI6Ii9ob21lL2hlbnJ5L2V4cHJlc3NteXNxbC9wdWJsaWMvamF2YXNjcmlwdHMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBtYWtlaWQoKSB7XG4gICAgdmFyIHJlc3VsdCAgICAgICAgICAgPSAnJztcbiAgICB2YXIgY2hhcmFjdGVycyAgICAgICA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSc7XG4gICAgY29uc3QgbnVtR2VuID0gMTA7XG4gICAgZm9yICggdmFyIGkgPSAwOyBpIDwgbnVtR2VuOyBpKysgKSB7XG4gICAgICAgcmVzdWx0ICs9IGNoYXJhY3RlcnMuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJhY3RlcnNMZW5ndGgpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiB9XG4gIl19",
    "map": {
      "version": 3,
      "sources": [
        "generatorCode.js"
      ],
      "names": [
        "makeid",
        "result",
        "characters",
        "numGen",
        "i",
        "charAt",
        "Math",
        "floor",
        "random",
        "charactersLength"
      ],
      "mappings": ";;AAAA,SAASA,MAAT,GAAkB;AACd,MAAIC,MAAM,GAAa,EAAvB;AACA,MAAIC,UAAU,GAAS,gEAAvB;AACA,MAAMC,MAAM,GAAG,EAAf;;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGD,MAArB,EAA6BC,CAAC,EAA9B,EAAmC;AAChCH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBC,gBAA3B,CAAlB,CAAV;AACF;;AACD,SAAOR,MAAP;AACF",
      "sourceRoot": "/home/henry/expressmysql/public/javascripts",
      "sourcesContent": [
        "function makeid() {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const numGen = 10;\n    for ( var i = 0; i < numGen; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n "
      ]
    },
    "sourceType": "script",
    "mtime": 1573937257547
  }
}