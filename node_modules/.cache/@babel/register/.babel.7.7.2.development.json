{
  "{\"sourceRoot\":\"/home/henry/expressmysql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _index = _interopRequireDefault(require(\"./routes/index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//console.log(indexRouter);\n//const { check, validationResult } = require('express-validator');\n//const { param, query, cookies, header, body} = require ('express-validator'); \nvar createError = require('http-errors');\n\nvar express = require('express');\n\nvar path = require('path');\n\nvar cookieParser = require('cookie-parser');\n\nvar logger = require('morgan');\n\nvar expressValidator = require('express-validator');\n\nvar hbs = require('hbs');\n\nvar bodyParser = require('body-parser'); //importando rutas de customer\n//const customerRoutes = require('../routes/index');\n//var usersRouter = require('./routes/users');\n\n\nvar app = express(); // view engine setup\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(cookieParser());\napp.use(express[\"static\"](path.join(__dirname, 'public'))); //app.use(expressValidator());\n\napp.use('/', _index[\"default\"]); //app.use('/users', usersRouter);\n// RUTAS\n//app.use('/customer',customerRoutes);\n// catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next(createError(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500); //res.render('error');\n\n  res.end();\n  console.error(err);\n}); // app.post('/customerstest',\n// [\n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check('contact_email','invalide email').isEmail()\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(errors);\n//       console.log(req.body);\n//     if (!errors.isEmpty()) {\n//       console.log('dentro del if');\n//       console.log(errors);\n//       return res.status(422).json({ errors: errors.array() });\n//       res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//     }else {\n//       let first_name = req.body.first_name;\n//       let last_name = req.body.last_name;\n//       let document_number = req.body.document_number;\n//       let country = req.body.country;   \n//       let contact_email = req.body.contact_email;\n//     //   res.send({});\n//     // } \n// const data = [];\n// mySqlConnectionFactory().then(connection => {\n//   const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n//   connection.query(query, [first_name,last_name,document_number,country]);\n//   //console.log('****** fin insert personal_data *******');\n//   const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n//   connection.query(query2,[contact_email]);\n//   //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n//   console.log('**********fin insert customer *************')\n//     //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//     .on('result', row =>console.log(row))\n//     //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//     //.on('end', () => res.send(200));\n// }).catch(error => console.error(error));\n// res.send('respond with a resource');\n//} \n// });\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "createError",
        "require",
        "express",
        "path",
        "cookieParser",
        "logger",
        "expressValidator",
        "hbs",
        "bodyParser",
        "app",
        "set",
        "join",
        "__dirname",
        "use",
        "json",
        "urlencoded",
        "extended",
        "indexRouter",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "end",
        "console",
        "module",
        "exports"
      ],
      "mappings": ";;AACA;;;;AACA;AACA;AACA;AACA,IAAIA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIK,gBAAgB,GAAGL,OAAO,CAAC,mBAAD,CAA9B;;AACA,IAAIM,GAAG,GAAGN,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIO,UAAU,GAAGP,OAAO,CAAC,aAAD,CAAxB,C,CAEA;AACA;AAEA;;;AAEA,IAAIQ,GAAG,GAAGP,OAAO,EAAjB,C,CAEA;;AACAO,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBP,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACI,GAAJ,CAAQR,MAAM,CAAC,KAAD,CAAd;AACAI,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACY,IAAR,EAAR;AACAL,GAAG,CAACI,GAAJ,CAAQX,OAAO,CAACa,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQT,YAAY,EAApB;AACAK,GAAG,CAACI,GAAJ,CAAQX,OAAO,UAAP,CAAeC,IAAI,CAACQ,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR,E,CACA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,GAAR,EAAaI,iBAAb,E,CACA;AACA;AACA;AACA;;AACAR,GAAG,CAACI,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAACpB,WAAW,CAAC,GAAD,CAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAS,GAAG,CAACI,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACT,GAAJ,CAAQgB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB,EANoC,CAOpC;;AACAP,EAAAA,GAAG,CAACQ,GAAJ;AACAC,EAAAA,OAAO,CAACJ,KAAR,CAAcH,GAAd;AACD,CAVD,E,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;;AACAQ,MAAM,CAACC,OAAP,GAAiBrB,GAAjB",
      "sourceRoot": "/home/henry/expressmysql",
      "sourcesContent": [
        "\nimport indexRouter from './routes/index';\n//console.log(indexRouter);\n//const { check, validationResult } = require('express-validator');\n//const { param, query, cookies, header, body} = require ('express-validator'); \nvar createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar expressValidator = require('express-validator');\nvar hbs = require('hbs');\nvar bodyParser = require('body-parser');\n\n//importando rutas de customer\n//const customerRoutes = require('../routes/index');\n\n//var usersRouter = require('./routes/users');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n//app.use(expressValidator());\napp.use('/', indexRouter);\n//app.use('/users', usersRouter);\n// RUTAS\n//app.use('/customer',customerRoutes);\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  //res.render('error');\n  res.end();\n  console.error(err);\n});\n\n// app.post('/customerstest',\n// [\n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check('contact_email','invalide email').isEmail()\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(errors);\n  //       console.log(req.body);\n  //     if (!errors.isEmpty()) {\n  //       console.log('dentro del if');\n  //       console.log(errors);\n  //       return res.status(422).json({ errors: errors.array() });\n  //       res.render('error', { title: 'USUARIO INSERTADO POST', error });\n  //     }else {\n  //       let first_name = req.body.first_name;\n  //       let last_name = req.body.last_name;\n  //       let document_number = req.body.document_number;\n  //       let country = req.body.country;   \n  //       let contact_email = req.body.contact_email;\n  //     //   res.send({});\n  //     // } \n  // const data = [];\n\n  // mySqlConnectionFactory().then(connection => {\n  //   const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n  //   connection.query(query, [first_name,last_name,document_number,country]);\n    \n    \n  //   //console.log('****** fin insert personal_data *******');\n\n  //   const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n  //   connection.query(query2,[contact_email]);\n  //   //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n  //   console.log('**********fin insert customer *************')\n  //     //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n  //     .on('result', row =>console.log(row))\n  //     //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n  //     //.on('end', () => res.send(200));\n  // }).catch(error => console.error(error));\n  // res.send('respond with a resource');\n  //} \n// });\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574190841633
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _expressValidator = _interopRequireDefault(require(\"express-validator\"));\n\nvar _MySqlConnectionFactory = _interopRequireDefault(require(\"../mysql/MySqlConnectionFactory\"));\n\nvar _generatorCode = require(\"../public/javascripts/generatorCode\");\n\nvar _inspector = require(\"inspector\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _require = require('express-validator'),\n    check = _require.check,\n    validationResult = _require.validationResult;\n\nvar _require2 = require('express-validator'),\n    param = _require2.param,\n    query = _require2.query,\n    cookies = _require2.cookies,\n    header = _require2.header,\n    body = _require2.body;\n\nvar app = (0, _express[\"default\"])(); //const server = express(); \n\n/************************************************************************/\n\n/*********************  GET PERSONAL DATA ******************************/\n// app.get('/', function(req, res, next) {\n//   const data = [];\n//  // const idCustomer = \"\";\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query = 'SELECT * FROM personal_data';\n//     connection.query(query)\n//       //.on('error', error => res.render('error', { title: 'Express', error }))\n//       .on('error', error => console.error('error', { title: 'USUARIOS', error }))\n//       .on('result', row => data.push({ id: row.id, first_name: row.first_name, last_name: row.last_name, document_number: row.document_number, country:row.country}))\n//       //.on('result', row =>console.log(row))\n//       .on('end', () => res.render('index', { title: 'USUARIOS', data }));\n//   }).catch(error => console.error(error));\n// });\n\n/************************************************************************/\n\n/*********************  GET by ID users listing. ************************/\n// app.get('/:id', function(req, res, next) {\n//   console.log('dentro de get/id');\n//   let userId = req.params.id;\n//   console.log(userId);\n//   let data = [];\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query = 'SELECT * FROM personal_data WHERE id = ?';\n//     console.log(userId);\n//     connection.query(query,[userId])\n//       .on('error', error => res.render('error', { title: 'USUARIOS POR ID', error }))\n//       .on('result', row => data = row)\n//       .on('result', row =>console.log(row))\n//       .on('end', () => res.render('userid', { title: 'USUARIOS POR ID', data }))\n//       .on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n// res.send('respond with a resource');\n// });\n\n/************************************************************************/\n\n/************************************************************************/\n\n/************************ REGISTRO CUSTOMER  *****************************/\n\n/******************* POST (/registro/customer) ***************************/\n// app.post('/customer',\n// [\n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check('contact_email','invalide email').isEmail()\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let first_name = req.body.first_name;\n//         let last_name = req.body.last_name;\n//         let document_number = req.body.document_number;\n//         let country = req.body.country;   \n//         let contact_email = req.body.contact_email;\n//       //   res.send({});\n//       // } \n//   const data = [];\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n//     connection.query(query, [first_name,last_name,document_number,country], function(err, result){\n//       if (err) throw err;\n//       let idCustomer =  result.insertId;\n//       console.log(\"customer ultimo id : \" + idCustomer);\n//     });\n//     //console.log('****** fin insert personal_data *******');\n//     const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n//     connection.query(query2,[contact_email]);\n//     console.log('**********fin insert customer *************')\n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       //.on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n/************************ REGISTRO GUEST  *****************************/\n\n/******************* POST (/registro/guest) ***************************/\n// app.post('/guest',\n// [\n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check(' bird_date','invalide format date').isLength({max:15})\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let first_name = req.body.first_name;\n//         let last_name = req.body.last_name;\n//         let document_number = req.body.document_number;\n//         let country = req.body.country;   \n//         let bird_date = req.body.bird_date;\n//       //   res.send({});\n//       // } \n//   const data = [];\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n//     connection.query(query, [first_name,last_name,document_number,country]);\n//     //console.log('****** fin insert personal_data *******');\n//     const query2 = \"INSERT INTO guest (personal_data_id, bird_date) VALUES ( LAST_INSERT_ID() ,STR_TO_DATE( ? ,'%d-%m-%Y'))\";\n//     connection.query(query2,[bird_date]);\n//     //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n//     console.log('**********fin insert guest *************')\n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       //.on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n/********************* REGISTRO APARTMENTS  **************************/\n\n/******************* POST (/registro/guest) ***************************/\n// app.post('/apartments',\n// [\n//   check('adress','invalide name').isLength({min:4 , max :150}),\n//   //check('url','invalide last name').isLength({min:4 , max :150}),\n//   check('number_rooms','number greater than zero').isLength({max :15}),\n//   check('postal_code','invalid postal code').isInt(),\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let adress = req.body.adress;\n//         const url = \"../uploads/\";\n//         let number_rooms = req.body.number_rooms;\n//         let postal_code = req.body.postal_code;   \n//       //   res.send({});\n//       // } \n//   const data = [];\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO apartments (adress, url, number_rooms, postal_code) VALUES (?,?,?,?);';\n//     connection.query(query, [adress,url,number_rooms,postal_code]);\n//     let idApartment = LAST_INSERT_ID();    \n//     console.log('****** fin insert apartments *******')\n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n/************************ PROMESA  *****************************/\n\n/******************* POST (/registro/booking) ***************************/\n\napp.post('/booking', [\n/*datos customer*/\ncheck('first_name', 'invalide name').isLength({\n  min: 4,\n  max: 150\n}), check('last_name', 'invalide last name').isLength({\n  min: 4,\n  max: 150\n}), check('document_number', 'invalide DNI').isLength({\n  max: 15\n}), check('country', 'invalide country').isLength({\n  min: 4,\n  max: 100\n}), check('contact_email', 'invalide email').isEmail(),\n/*datos booking*/\ncheck('code', 'codigo invalido').isLength({\n  max: 15\n}), check('adress', 'debe seleccionar una opcion').isLength({\n  max: 150\n}), check('arrival_date', 'invalide formant date').isLength({\n  max: 15\n}), check('departure_date', 'invalide formant date').isLength({\n  max: 15\n}), check('num_guest', 'number greater than zero').isInt(), check('apartments_id', 'number greater than zero').isInt()], function (req, res) {\n  var errors = validationResult(req);\n  console.log(req.body);\n\n  if (!errors.isEmpty()) {\n    console.log('dentro del if');\n    console.log(errors);\n    return res.status(422).json({\n      errors: errors.array()\n    });\n    res.render('error', {\n      title: 'ERROR AL CREAR BOOKING',\n      error: error\n    });\n  } else {\n    /*datos customer*/\n    var first_name = req.body.first_name;\n    var last_name = req.body.last_name;\n    var document_number = req.body.document_number;\n    var country = req.body.country;\n    var contact_email = req.body.contact_email;\n    /*datos booking*/\n\n    var adress = req.body.adress;\n    var code = req.body.code;\n    var arrival_date = req.body.arrival_date;\n    var departure_date = req.body.departure_date;\n    var num_guest = req.body.num_guest;\n    var apartments_id = req.body.apartments_id;\n    /*****************/\n\n    var data = [];\n    (0, _MySqlConnectionFactory[\"default\"])().then(function (connection) {\n      console.log(connection);\n      var query = 'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n      var result1 = connection.query(query, [first_name, last_name, document_number, country], function (err, result, fields) {\n        var customerID = result.insertId;\n        console.log('****************************');\n        console.log(result1);\n        console.log('****************************');\n        var query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( ? , ?);';\n        var result2 = connection.query(query2, [customerID, contact_email], function (err, result, fields) {\n          console.log('****************************');\n          console.log(result2);\n          console.log('****************************');\n          var query3 = \"INSERT INTO booking (code, arrival_date, departure_date, num_guest, customer_personal_data_id, apartments_id) \\n                                VALUES (?, STR_TO_DATE( ? ,'%d-%m-%Y'), STR_TO_DATE( ? ,'%d-%m-%Y'),?,?,?);\";\n          var result3 = connection.query(query3, [code, arrival_date, departure_date, num_guest, customerID, apartments_id], function (err, result, fields) {\n            console.log('****************************');\n            console.log(result3);\n            console.log('****************************');\n          });\n        });\n      });\n    })[\"catch\"](function (error) {\n      return console.error(error);\n    }); // res.send('respond with a resource');\n  }\n});\n/************************ REGISTRO BOOKING  *****************************/\n\n/******************* POST (/registro/booking) ***************************/\n// app.post('/booking',\n// [\n//   check('adress','debe seleccionar una opcion').isLength({max:150}),\n//   check('arrival_date','invalide formant date').isLength({max:15}),\n//   check('departure_date','invalide formant date').isLength({max:15}),\n//   check('num_guest','number greater than zero').isInt()\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let adress = req.body.adress;\n//         let code = generatorCode;\n//         let arrival_date = req.body.arrival_date;\n//         let departure_date = req.body.departure_date;\n//         let num_guest = req.body.country;   \n//       //   res.send({});\n//       // } \n//   const data = [];\n//    //console.log(\"idcustomer :\" + idCustomer);     \n//   mySqlConnectionFactory().then(connection => {\n//     let  idApartment = connection.query(\"SELECT id FROM apartments WHERE adress = ? \",[adress])\n//     console.log(\"IdApartment : \"+ idApartment);\n//     let idCustomer = connection.query(\"SELECT personal_data_id FROM customer ORDER BY personal_data_id DESC LIMIT 1;\");\n//     console.log(\"IdCustomer: \"+ idCustomer);\n//     const query2 =  \"INSERT INTO booking (code, arrival_date, departure_date, num_guest, customer_personal_data_id, apartments_id) VALUES ( STR_TO_DATE( ? ,'%d-%m-%Y'), STR_TO_DATE( ? ,'%d-%m-%Y'),?,?,?,?);\";\n//     connection.query(query2, [code,arrival_date,departure_date,num_guest,idCustomer, idApartment]);\n//     console.log('****** fin insert booking *******')\n//         .on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n/*********************************************************************************/\n\n/*********************** PUT users listing. ************************************/\n// app.put('/:id', function(req, res, next) {\n//   console.log('dentro de PUT');\n//   let id = req.param.id;\n//   let first_name = req.body.first_name;\n//   let last_name = req.body.last_name;\n//   let document_number = req.body.document_number;\n//   let country = req.body.country;\n//   const data = [];\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query =  'UPDATE personal_data (first_name, last_name, document_number, country) SET value = (?,?,?,?) WHERE id = ?';\n//     connection.query(query, [id, first_name, last_name, document_number, country])\n//       .on('error', error => res.render('error', { title: 'Express', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n// res.send('respond with a resource');\n//  });\n\n/******************************************************************************/\n\n/************************** DELETE users listing. ****************************/\n// app.delete('/:id', function(req, res, next) {\n//   let id = req.params.id;\n//   const data = [];\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query = 'DELETE * FROM personal_data WHERE id=?';\n//     connection.query(query, [id])\n//       .on('error', error => res.render('error', { title: 'Express', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//  });\n\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "check",
        "validationResult",
        "param",
        "query",
        "cookies",
        "header",
        "body",
        "app",
        "post",
        "isLength",
        "min",
        "max",
        "isEmail",
        "isInt",
        "req",
        "res",
        "errors",
        "console",
        "log",
        "isEmpty",
        "status",
        "json",
        "array",
        "render",
        "title",
        "error",
        "first_name",
        "last_name",
        "document_number",
        "country",
        "contact_email",
        "adress",
        "code",
        "arrival_date",
        "departure_date",
        "num_guest",
        "apartments_id",
        "data",
        "then",
        "connection",
        "result1",
        "err",
        "result",
        "fields",
        "customerID",
        "insertId",
        "query2",
        "result2",
        "query3",
        "result3"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;eAEoCA,OAAO,CAAC,mBAAD,C;IAAnCC,K,YAAAA,K;IAAOC,gB,YAAAA,gB;;gBACgCF,OAAO,CAAE,mBAAF,C;IAA9CG,K,aAAAA,K;IAAOC,K,aAAAA,K;IAAOC,O,aAAAA,O;IAASC,M,aAAAA,M;IAAQC,I,aAAAA,I;;AACvC,IAAMC,GAAG,GAAG,0BAAZ,C,CACA;;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGC;AACD;;AAGA;;AACA;;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;;AACD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;;AACAA,GAAG,CAACC,IAAJ,CAAS,UAAT,EAAoB;AAClB;AACCR,KAAK,CAAC,YAAD,EAAc,eAAd,CAAL,CAAoCS,QAApC,CAA6C;AAACC,EAAAA,GAAG,EAAC,CAAL;AAASC,EAAAA,GAAG,EAAE;AAAd,CAA7C,CAFiB,EAGlBX,KAAK,CAAC,WAAD,EAAa,oBAAb,CAAL,CAAwCS,QAAxC,CAAiD;AAACC,EAAAA,GAAG,EAAC,CAAL;AAASC,EAAAA,GAAG,EAAE;AAAd,CAAjD,CAHkB,EAIlBX,KAAK,CAAC,iBAAD,EAAmB,cAAnB,CAAL,CAAwCS,QAAxC,CAAiD;AAACE,EAAAA,GAAG,EAAE;AAAN,CAAjD,CAJkB,EAKlBX,KAAK,CAAC,SAAD,EAAW,kBAAX,CAAL,CAAoCS,QAApC,CAA6C;AAACC,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,GAAG,EAAC;AAAZ,CAA7C,CALkB,EAMlBX,KAAK,CAAC,eAAD,EAAiB,gBAAjB,CAAL,CAAwCY,OAAxC,EANkB;AAQlB;AACAZ,KAAK,CAAC,MAAD,EAAQ,iBAAR,CAAL,CAAgCS,QAAhC,CAAyC;AAACE,EAAAA,GAAG,EAAC;AAAL,CAAzC,CATkB,EAUlBX,KAAK,CAAC,QAAD,EAAU,6BAAV,CAAL,CAA8CS,QAA9C,CAAuD;AAACE,EAAAA,GAAG,EAAC;AAAL,CAAvD,CAVkB,EAWlBX,KAAK,CAAC,cAAD,EAAgB,uBAAhB,CAAL,CAA8CS,QAA9C,CAAuD;AAACE,EAAAA,GAAG,EAAC;AAAL,CAAvD,CAXkB,EAYlBX,KAAK,CAAC,gBAAD,EAAkB,uBAAlB,CAAL,CAAgDS,QAAhD,CAAyD;AAACE,EAAAA,GAAG,EAAC;AAAL,CAAzD,CAZkB,EAalBX,KAAK,CAAC,WAAD,EAAa,0BAAb,CAAL,CAA8Ca,KAA9C,EAbkB,EAclBb,KAAK,CAAC,eAAD,EAAiB,0BAAjB,CAAL,CAAkDa,KAAlD,EAdkB,CAApB,EAkBG,UAASC,GAAT,EAAaC,GAAb,EAAiB;AAClB,MAAMC,MAAM,GAAGf,gBAAgB,CAACa,GAAD,CAA/B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACR,IAAhB;;AACF,MAAI,CAACU,MAAM,CAACG,OAAP,EAAL,EAAuB;AACrBF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEL,MAAAA,MAAM,EAAEA,MAAM,CAACM,KAAP;AAAV,KAArB,CAAP;AACAP,IAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX,EAAoB;AAAEC,MAAAA,KAAK,EAAE,wBAAT;AAAmCC,MAAAA,KAAK,EAALA;AAAnC,KAApB;AACD,GALD,MAKM;AACJ;AACA,QAAIC,UAAU,GAAGZ,GAAG,CAACR,IAAJ,CAASoB,UAA1B;AACA,QAAIC,SAAS,GAAGb,GAAG,CAACR,IAAJ,CAASqB,SAAzB;AACA,QAAIC,eAAe,GAAGd,GAAG,CAACR,IAAJ,CAASsB,eAA/B;AACA,QAAIC,OAAO,GAAGf,GAAG,CAACR,IAAJ,CAASuB,OAAvB;AACA,QAAIC,aAAa,GAAGhB,GAAG,CAACR,IAAJ,CAASwB,aAA7B;AACA;;AAEA,QAAIC,MAAM,GAAGjB,GAAG,CAACR,IAAJ,CAASyB,MAAtB;AACA,QAAIC,IAAI,GAAIlB,GAAG,CAACR,IAAJ,CAAS0B,IAArB;AACA,QAAIC,YAAY,GAAGnB,GAAG,CAACR,IAAJ,CAAS2B,YAA5B;AACA,QAAIC,cAAc,GAAGpB,GAAG,CAACR,IAAJ,CAAS4B,cAA9B;AACA,QAAIC,SAAS,GAAGrB,GAAG,CAACR,IAAJ,CAAS6B,SAAzB;AACA,QAAIC,aAAa,GAAGtB,GAAG,CAACR,IAAJ,CAAS8B,aAA7B;AACA;;AACA,QAAMC,IAAI,GAAG,EAAb;AAEA,8CACOC,IADP,CACY,UAAAC,UAAU,EAAK;AACnBtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,UAAZ;AACC,UAAMpC,KAAK,GAAI,+FAAf;AACA,UAAIqC,OAAO,GAAID,UAAU,CAACpC,KAAX,CAAiBA,KAAjB,EAAwB,CAACuB,UAAD,EAAYC,SAAZ,EAAsBC,eAAtB,EAAsCC,OAAtC,CAAxB,EAAuE,UAACY,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAuB;AAC5G,YAAIC,UAAU,GAAGF,MAAM,CAACG,QAAxB;AACA5B,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYsB,OAAZ;AACAvB,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,YAAM4B,MAAM,GAAG,yEAAf;AACA,YAAIC,OAAO,GAAGR,UAAU,CAACpC,KAAX,CAAiB2C,MAAjB,EAAwB,CAACF,UAAD,EAAad,aAAb,CAAxB,EAAoD,UAACW,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAuB;AACvF1B,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY6B,OAAZ;AACA9B,UAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,cAAM8B,MAAM,gOAAZ;AAEA,cAAIC,OAAO,GAAIV,UAAU,CAACpC,KAAX,CAAiB6C,MAAjB,EAAyB,CAAChB,IAAD,EAAMC,YAAN,EAAmBC,cAAnB,EAAkCC,SAAlC,EAA4CS,UAA5C,EAAwDR,aAAxD,CAAzB,EAAgG,UAACK,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAwB;AACrI1B,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY+B,OAAZ;AACAhC,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAED,WALc,CAAf;AAQD,SAda,CAAd;AAiBA,OAvBc,CAAf;AAyBF,KA7BP,WAgCa,UAAAO,KAAK;AAAA,aAAIR,OAAO,CAACQ,KAAR,CAAcA,KAAd,CAAJ;AAAA,KAhClB,EAlBI,CAoDH;AAGF;AACA,CAlFD;AAqFA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AACC;AACD;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;AAEA;;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;;eAIelB,G",
      "sourceRoot": "/home/henry/expressmysql/routes",
      "sourcesContent": [
        "import express from 'express';\nimport expressValidator from 'express-validator';\nimport mySqlConnectionFactory from '../mysql/MySqlConnectionFactory';\nimport { makeid } from '../public/javascripts/generatorCode';\nimport { url } from 'inspector';\n\nconst { check, validationResult } = require('express-validator');\nconst { param, query, cookies, header, body} = require ('express-validator'); \nconst app = express();\n//const server = express(); \n\n/************************************************************************/\n/*********************  GET PERSONAL DATA ******************************/\n// app.get('/', function(req, res, next) {\n  \n//   const data = [];\n//  // const idCustomer = \"\";\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query = 'SELECT * FROM personal_data';\n//     connection.query(query)\n//       //.on('error', error => res.render('error', { title: 'Express', error }))\n//       .on('error', error => console.error('error', { title: 'USUARIOS', error }))\n//       .on('result', row => data.push({ id: row.id, first_name: row.first_name, last_name: row.last_name, document_number: row.document_number, country:row.country}))\n//       //.on('result', row =>console.log(row))\n//       .on('end', () => res.render('index', { title: 'USUARIOS', data }));\n//   }).catch(error => console.error(error));\n  \n// });\n/************************************************************************/\n/*********************  GET by ID users listing. ************************/\n\n// app.get('/:id', function(req, res, next) {\n//   console.log('dentro de get/id');\n//   let userId = req.params.id;\n//   console.log(userId);\n//   let data = [];\n\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query = 'SELECT * FROM personal_data WHERE id = ?';\n//     console.log(userId);\n//     connection.query(query,[userId])\n    \n//       .on('error', error => res.render('error', { title: 'USUARIOS POR ID', error }))\n//       .on('result', row => data = row)\n//       .on('result', row =>console.log(row))\n//       .on('end', () => res.render('userid', { title: 'USUARIOS POR ID', data }))\n//       .on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n  \n\n // res.send('respond with a resource');\n// });\n\n\n/************************************************************************/\n/************************************************************************/\n\n/************************ REGISTRO CUSTOMER  *****************************/\n/******************* POST (/registro/customer) ***************************/\n// app.post('/customer',\n// [\n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check('contact_email','invalide email').isEmail()\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let first_name = req.body.first_name;\n//         let last_name = req.body.last_name;\n//         let document_number = req.body.document_number;\n//         let country = req.body.country;   \n//         let contact_email = req.body.contact_email;\n//       //   res.send({});\n//       // } \n//   const data = [];\n\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n//     connection.query(query, [first_name,last_name,document_number,country], function(err, result){\n//       if (err) throw err;\n//       let idCustomer =  result.insertId;\n//       console.log(\"customer ultimo id : \" + idCustomer);\n//     });\n    \n//     //console.log('****** fin insert personal_data *******');\n\n//     const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( LAST_INSERT_ID() , ?)';\n//     connection.query(query2,[contact_email]);\n   \n//     console.log('**********fin insert customer *************')\n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       //.on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n /************************ REGISTRO GUEST  *****************************/\n/******************* POST (/registro/guest) ***************************/\n// app.post('/guest',\n// [\n \n//   check('first_name','invalide name').isLength({min:4 , max :150}),\n//   check('last_name','invalide last name').isLength({min:4 , max :150}),\n//   check('document_number','invalide DNI').isLength({max :15}),\n//   check('country','invalide country').isLength({min:4, max:100}),\n//   check(' bird_date','invalide format date').isLength({max:15})\n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let first_name = req.body.first_name;\n//         let last_name = req.body.last_name;\n//         let document_number = req.body.document_number;\n//         let country = req.body.country;   \n//         let bird_date = req.body.bird_date;\n//       //   res.send({});\n//       // } \n//   const data = [];\n\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n//     connection.query(query, [first_name,last_name,document_number,country]);\n    \n    \n//     //console.log('****** fin insert personal_data *******');\n\n//     const query2 = \"INSERT INTO guest (personal_data_id, bird_date) VALUES ( LAST_INSERT_ID() ,STR_TO_DATE( ? ,'%d-%m-%Y'))\";\n//     connection.query(query2,[bird_date]);\n//     //console.log('ultimo registro customer insertado :' + LAST_INSERT_ID());\n//     console.log('**********fin insert guest *************')\n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       //.on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n\n\n\n/********************* REGISTRO APARTMENTS  **************************/\n/******************* POST (/registro/guest) ***************************/\n// app.post('/apartments',\n// [\n \n//   check('adress','invalide name').isLength({min:4 , max :150}),\n//   //check('url','invalide last name').isLength({min:4 , max :150}),\n//   check('number_rooms','number greater than zero').isLength({max :15}),\n//   check('postal_code','invalid postal code').isInt(),\n  \n//   //console.log(\"datos leidos : \" + req.body.first_name+' ' +req.body.last_name+' '+req.body.document_number+' '+req.body.country)\n\n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let adress = req.body.adress;\n//         const url = \"../uploads/\";\n//         let number_rooms = req.body.number_rooms;\n//         let postal_code = req.body.postal_code;   \n        \n//       //   res.send({});\n//       // } \n//   const data = [];\n\n//   mySqlConnectionFactory().then(connection => {\n//     const query =  'INSERT INTO apartments (adress, url, number_rooms, postal_code) VALUES (?,?,?,?);';\n//     connection.query(query, [adress,url,number_rooms,postal_code]);\n//     let idApartment = LAST_INSERT_ID();    \n//     console.log('****** fin insert apartments *******')\n   \n//       //.on('error', error => res.render('error', { title: 'USUARIO INSERTADO POST', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n/************************ PROMESA  *****************************/\n/******************* POST (/registro/booking) ***************************/\napp.post('/booking',[\n  /*datos customer*/\n   check('first_name','invalide name').isLength({min:4 , max :150}),\n  check('last_name','invalide last name').isLength({min:4 , max :150}),\n  check('document_number','invalide DNI').isLength({max :15}),\n  check('country','invalide country').isLength({min:4, max:100}),\n  check('contact_email','invalide email').isEmail(),\n\n  /*datos booking*/\n  check('code','codigo invalido').isLength({max:15}),\n  check('adress','debe seleccionar una opcion').isLength({max:150}),\n  check('arrival_date','invalide formant date').isLength({max:15}),\n  check('departure_date','invalide formant date').isLength({max:15}),\n  check('num_guest','number greater than zero').isInt(),\n  check('apartments_id','number greater than zero').isInt()\n \n  \n\n], function(req,res){\n  const errors = validationResult(req);\n  console.log(req.body);\nif (!errors.isEmpty()) {\n  console.log('dentro del if');\n  console.log(errors);\n  return res.status(422).json({ errors: errors.array() });\n  res.render('error', { title: 'ERROR AL CREAR BOOKING', error });\n}else {\n  /*datos customer*/\n  let first_name = req.body.first_name;\n  let last_name = req.body.last_name;\n  let document_number = req.body.document_number;\n  let country = req.body.country;   \n  let contact_email = req.body.contact_email;\n  /*datos booking*/\n  \n  let adress = req.body.adress;\n  let code =  req.body.code;\n  let arrival_date = req.body.arrival_date;\n  let departure_date = req.body.departure_date;\n  let num_guest = req.body.num_guest;   \n  let apartments_id = req.body.apartments_id;\n  /*****************/\n  const data = [];\n\n  mySqlConnectionFactory()\n        .then(connection =>  {\n          console.log(connection);\n           const query =  'INSERT INTO personal_data (first_name, last_name, document_number, country) VALUES (?,?,?,?);';\n           let result1 =  connection.query(query, [first_name,last_name,document_number,country],(err, result, fields)=>{\n            let customerID = result.insertId;\n            console.log('****************************');\n            console.log(result1);\n            console.log('****************************');\n            const query2 = 'INSERT INTO customer (personal_data_id, contact_email) VALUES ( ? , ?);';\n            let result2 = connection.query(query2,[customerID, contact_email],(err, result, fields)=>{\n              console.log('****************************');\n              console.log(result2);\n              console.log('****************************');\n              const query3 =  `INSERT INTO booking (code, arrival_date, departure_date, num_guest, customer_personal_data_id, apartments_id) \n                                VALUES (?, STR_TO_DATE( ? ,'%d-%m-%Y'), STR_TO_DATE( ? ,'%d-%m-%Y'),?,?,?);`;\n              let result3 =  connection.query(query3, [code,arrival_date,departure_date,num_guest,customerID, apartments_id],(err, result, fields) =>{ \n                console.log('****************************');\n                console.log(result3);\n                console.log('****************************');\n              \n              })\n             \n\n            });\n           \n         \n           });\n           \n        })\n      \n\n        .catch(error => console.error(error));\n        \n   // res.send('respond with a resource');\n\n\n}\n}) \n\n\n/************************ REGISTRO BOOKING  *****************************/\n/******************* POST (/registro/booking) ***************************/\n// app.post('/booking',\n// [\n//   check('adress','debe seleccionar una opcion').isLength({max:150}),\n//   check('arrival_date','invalide formant date').isLength({max:15}),\n//   check('departure_date','invalide formant date').isLength({max:15}),\n//   check('num_guest','number greater than zero').isInt()\n  \n// ], function(req,res){\n//         const errors = validationResult(req);\n//         console.log(req.body);\n//       if (!errors.isEmpty()) {\n//         console.log('dentro del if');\n//         console.log(errors);\n//         return res.status(422).json({ errors: errors.array() });\n//         res.render('error', { title: 'USUARIO INSERTADO POST', error });\n//       }else {\n//         let adress = req.body.adress;\n//         let code = generatorCode;\n//         let arrival_date = req.body.arrival_date;\n//         let departure_date = req.body.departure_date;\n//         let num_guest = req.body.country;   \n        \n//       //   res.send({});\n//       // } \n//   const data = [];\n//    //console.log(\"idcustomer :\" + idCustomer);     \n//   mySqlConnectionFactory().then(connection => {\n//     let  idApartment = connection.query(\"SELECT id FROM apartments WHERE adress = ? \",[adress])\n//     console.log(\"IdApartment : \"+ idApartment);\n//     let idCustomer = connection.query(\"SELECT personal_data_id FROM customer ORDER BY personal_data_id DESC LIMIT 1;\");\n//     console.log(\"IdCustomer: \"+ idCustomer);\n//     const query2 =  \"INSERT INTO booking (code, arrival_date, departure_date, num_guest, customer_personal_data_id, apartments_id) VALUES ( STR_TO_DATE( ? ,'%d-%m-%Y'), STR_TO_DATE( ? ,'%d-%m-%Y'),?,?,?,?);\";\n//     connection.query(query2, [code,arrival_date,departure_date,num_guest,idCustomer, idApartment]);\n        \n//     console.log('****** fin insert booking *******')\n\n//         .on('result', row =>console.log(row))\n//       //.on('result', row =>console.log('id Personal Data : '+ idCustomer))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n//   res.send('respond with a resource');\n//   } \n//  });\n\n\n/*********************************************************************************/\n /*********************** PUT users listing. ************************************/\n// app.put('/:id', function(req, res, next) {\n\n//   console.log('dentro de PUT');\n//   let id = req.param.id;\n//   let first_name = req.body.first_name;\n//   let last_name = req.body.last_name;\n//   let document_number = req.body.document_number;\n//   let country = req.body.country;\n\n//   const data = [];\n\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query =  'UPDATE personal_data (first_name, last_name, document_number, country) SET value = (?,?,?,?) WHERE id = ?';\n//     connection.query(query, [id, first_name, last_name, document_number, country])\n//       .on('error', error => res.render('error', { title: 'Express', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n  \n\n// res.send('respond with a resource');\n\n//  });\n\n/******************************************************************************/\n/************************** DELETE users listing. ****************************/\n\n// app.delete('/:id', function(req, res, next) {\n\n//   let id = req.params.id;\n  \n//   const data = [];\n\n//   mySqlConnectionFactory({ }).then(connection => {\n//     const query = 'DELETE * FROM personal_data WHERE id=?';\n//     connection.query(query, [id])\n//       .on('error', error => res.render('error', { title: 'Express', error }))\n//       .on('result', row =>console.log(row))\n//       //.on('end', () => res.send(200));\n//   }).catch(error => console.error(error));\n  \n\n//   res.send('respond with a resource');\n\n//  });\n\n\n\nexport default app;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1574268741458
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/mysql\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/mysql/MySqlConnectionFactory.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/mysql",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/mysql/MySqlConnectionFactory.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/mysql/MySqlConnectionFactory.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/mysql/MySqlConnectionFactory.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/mysql",
        "sourceFileName": "MySqlConnectionFactory.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar mySqlConnectionFactory = function mySqlConnectionFactory(configuration) {\n  return new Promise(function (resolve, reject) {\n    try {\n      var mySqlConnection = _mysql[\"default\"].createConnection(_objectSpread({}, {\n        host: 'localhost',\n        port: 13306,\n        user: 'fastcheckin',\n        password: 'fastcheckin',\n        database: 'fastcheckin'\n      }, {}, configuration));\n\n      mySqlConnection.connect(function (err) {\n        err ? reject(err) : resolve(mySqlConnection);\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nvar _default = mySqlConnectionFactory;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk15U3FsQ29ubmVjdGlvbkZhY3RvcnkuanMiXSwibmFtZXMiOlsibXlTcWxDb25uZWN0aW9uRmFjdG9yeSIsImNvbmZpZ3VyYXRpb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsIm15U3FsQ29ubmVjdGlvbiIsIm15c3FsIiwiY3JlYXRlQ29ubmVjdGlvbiIsImhvc3QiLCJwb3J0IiwidXNlciIsInBhc3N3b3JkIiwiZGF0YWJhc2UiLCJjb25uZWN0IiwiZXJyIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7Ozs7Ozs7OztBQUVBLElBQU1BLHNCQUFzQixHQUFHLFNBQXpCQSxzQkFBeUIsQ0FBQUMsYUFBYTtBQUFBLFNBQUksSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFxQjtBQUMvRSxRQUFJO0FBQ0YsVUFBTUMsZUFBZSxHQUFHQyxrQkFBTUMsZ0JBQU4sbUJBQTJCO0FBQ2pEQyxRQUFBQSxJQUFJLEVBQUUsV0FEMkM7QUFFakRDLFFBQUFBLElBQUksRUFBRSxLQUYyQztBQUdqREMsUUFBQUEsSUFBSSxFQUFFLGFBSDJDO0FBSWpEQyxRQUFBQSxRQUFRLEVBQUcsYUFKc0M7QUFLakRDLFFBQUFBLFFBQVEsRUFBRTtBQUx1QyxPQUEzQixNQU1sQlgsYUFOa0IsRUFBeEI7O0FBUUFJLE1BQUFBLGVBQWUsQ0FBQ1EsT0FBaEIsQ0FBd0IsVUFBU0MsR0FBVCxFQUFjO0FBQ3BDQSxRQUFBQSxHQUFHLEdBQUdWLE1BQU0sQ0FBQ1UsR0FBRCxDQUFULEdBQWlCWCxPQUFPLENBQUNFLGVBQUQsQ0FBM0I7QUFDRCxPQUZEO0FBR0QsS0FaRCxDQVlFLE9BQU9VLEtBQVAsRUFBYztBQUNkWCxNQUFBQSxNQUFNLENBQUNXLEtBQUQsQ0FBTjtBQUNEO0FBQ0YsR0FoQitDLENBQUo7QUFBQSxDQUE1Qzs7ZUFrQmVmLHNCIiwic291cmNlUm9vdCI6Ii9ob21lL2hlbnJ5L2V4cHJlc3NteXNxbC9teXNxbCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBteXNxbCBmcm9tICdteXNxbCc7XG5cbmNvbnN0IG15U3FsQ29ubmVjdGlvbkZhY3RvcnkgPSBjb25maWd1cmF0aW9uID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBteVNxbENvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVDb25uZWN0aW9uKHsuLi57XG4gICAgICBob3N0OiAnbG9jYWxob3N0JyxcbiAgICAgIHBvcnQ6IDEzMzA2LFxuICAgICAgdXNlcjogJ2Zhc3RjaGVja2luJyxcbiAgICAgIHBhc3N3b3JkIDogJ2Zhc3RjaGVja2luJyxcbiAgICAgIGRhdGFiYXNlOiAnZmFzdGNoZWNraW4nXG4gICAgfSwgLi4uY29uZmlndXJhdGlvbiB9KTtcblxuICAgIG15U3FsQ29ubmVjdGlvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xuICAgICAgZXJyID8gcmVqZWN0KGVycikgOiByZXNvbHZlKG15U3FsQ29ubmVjdGlvbik7XG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmVqZWN0KGVycm9yKTtcbiAgfVxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IG15U3FsQ29ubmVjdGlvbkZhY3Rvcnk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "MySqlConnectionFactory.js"
      ],
      "names": [
        "mySqlConnectionFactory",
        "configuration",
        "Promise",
        "resolve",
        "reject",
        "mySqlConnection",
        "mysql",
        "createConnection",
        "host",
        "port",
        "user",
        "password",
        "database",
        "connect",
        "err",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;AAEA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,aAAa;AAAA,SAAI,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/E,QAAI;AACF,UAAMC,eAAe,GAAGC,kBAAMC,gBAAN,mBAA2B;AACjDC,QAAAA,IAAI,EAAE,WAD2C;AAEjDC,QAAAA,IAAI,EAAE,KAF2C;AAGjDC,QAAAA,IAAI,EAAE,aAH2C;AAIjDC,QAAAA,QAAQ,EAAG,aAJsC;AAKjDC,QAAAA,QAAQ,EAAE;AALuC,OAA3B,MAMlBX,aANkB,EAAxB;;AAQAI,MAAAA,eAAe,CAACQ,OAAhB,CAAwB,UAASC,GAAT,EAAc;AACpCA,QAAAA,GAAG,GAAGV,MAAM,CAACU,GAAD,CAAT,GAAiBX,OAAO,CAACE,eAAD,CAA3B;AACD,OAFD;AAGD,KAZD,CAYE,OAAOU,KAAP,EAAc;AACdX,MAAAA,MAAM,CAACW,KAAD,CAAN;AACD;AACF,GAhB+C,CAAJ;AAAA,CAA5C;;eAkBef,sB",
      "sourceRoot": "/home/henry/expressmysql/mysql",
      "sourcesContent": [
        "import mysql from 'mysql';\n\nconst mySqlConnectionFactory = configuration => new Promise((resolve, reject) => {\n  try {\n    const mySqlConnection = mysql.createConnection({...{\n      host: 'localhost',\n      port: 13306,\n      user: 'fastcheckin',\n      password : 'fastcheckin',\n      database: 'fastcheckin'\n    }, ...configuration });\n\n    mySqlConnection.connect(function(err) {\n      err ? reject(err) : resolve(mySqlConnection);\n    });\n  } catch (error) {\n    reject(error);\n  }\n});\n\nexport default mySqlConnectionFactory;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573466803411
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/routes/users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar router = express.Router();\n/* GET users listing. */\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwicm91dGVyIiwiUm91dGVyIiwiZ2V0IiwicmVxIiwicmVzIiwibmV4dCIsInNlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBYjtBQUVBOztBQUNBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQkMsSUFBbkIsRUFBeUI7QUFDdkNELEVBQUFBLEdBQUcsQ0FBQ0UsSUFBSixDQUFTLHlCQUFUO0FBQ0QsQ0FGRDtBQUlBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2hlbnJ5L2V4cHJlc3NteXNxbC9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuXG4vKiBHRVQgdXNlcnMgbGlzdGluZy4gKi9cbnJvdXRlci5nZXQoJy8nLCBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkge1xuICByZXMuc2VuZCgncmVzcG9uZCB3aXRoIGEgcmVzb3VyY2UnKTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "next",
        "send",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAb;AAEA;;AACAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,yBAAT;AACD,CAFD;AAIAC,MAAM,CAACC,OAAP,GAAiBR,MAAjB",
      "sourceRoot": "/home/henry/expressmysql/routes",
      "sourcesContent": [
        "var express = require('express');\nvar router = express.Router();\n\n/* GET users listing. */\nrouter.get('/', function(req, res, next) {\n  res.send('respond with a resource');\n});\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1573121638871
  },
  "{\"sourceRoot\":\"/home/henry/expressmysql/public/javascripts\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/henry/expressmysql\",\"filename\":\"/home/henry/expressmysql/public/javascripts/generatorCode.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/henry/expressmysql\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.7.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/henry/expressmysql/public/javascripts",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/henry/expressmysql",
      "filename": "/home/henry/expressmysql/public/javascripts/generatorCode.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/henry/expressmysql",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/henry/expressmysql/public/javascripts/generatorCode.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/henry/expressmysql/public/javascripts/generatorCode.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/henry/expressmysql/public/javascripts",
        "sourceFileName": "generatorCode.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction makeid() {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var numGen = 10;\n\n  for (var i = 0; i < numGen; i++) {\n    result += characters.charAt(Math.floor(Math.random() * characters.Length));\n  }\n\n  return result;\n}\n\nvar _default = makeid();\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRvckNvZGUuanMiXSwibmFtZXMiOlsibWFrZWlkIiwicmVzdWx0IiwiY2hhcmFjdGVycyIsIm51bUdlbiIsImkiLCJjaGFyQXQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJMZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxTQUFTQSxNQUFULEdBQWtCO0FBQ2QsTUFBSUMsTUFBTSxHQUFhLEVBQXZCO0FBQ0EsTUFBSUMsVUFBVSxHQUFTLGdFQUF2QjtBQUNBLE1BQU1DLE1BQU0sR0FBRyxFQUFmOztBQUNBLE9BQU0sSUFBSUMsQ0FBQyxHQUFHLENBQWQsRUFBaUJBLENBQUMsR0FBR0QsTUFBckIsRUFBNkJDLENBQUMsRUFBOUIsRUFBbUM7QUFDaENILElBQUFBLE1BQU0sSUFBSUMsVUFBVSxDQUFDRyxNQUFYLENBQWtCQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0QsSUFBSSxDQUFDRSxNQUFMLEtBQWdCTixVQUFVLENBQUNPLE1BQXRDLENBQWxCLENBQVY7QUFDRjs7QUFDRCxTQUFPUixNQUFQO0FBQ0Y7O2VBRWVELE1BQU0sRSIsInNvdXJjZVJvb3QiOiIvaG9tZS9oZW5yeS9leHByZXNzbXlzcWwvcHVibGljL2phdmFzY3JpcHRzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbWFrZWlkKCkge1xuICAgIHZhciByZXN1bHQgICAgICAgICAgID0gJyc7XG4gICAgdmFyIGNoYXJhY3RlcnMgICAgICAgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xuICAgIGNvbnN0IG51bUdlbiA9IDEwO1xuICAgIGZvciAoIHZhciBpID0gMDsgaSA8IG51bUdlbjsgaSsrICkge1xuICAgICAgIHJlc3VsdCArPSBjaGFyYWN0ZXJzLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjaGFyYWN0ZXJzLkxlbmd0aCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuIH1cbiBcbiBleHBvcnQgZGVmYXVsdCAgbWFrZWlkKCk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "generatorCode.js"
      ],
      "names": [
        "makeid",
        "result",
        "characters",
        "numGen",
        "i",
        "charAt",
        "Math",
        "floor",
        "random",
        "Length"
      ],
      "mappings": ";;;;;;;AAAA,SAASA,MAAT,GAAkB;AACd,MAAIC,MAAM,GAAa,EAAvB;AACA,MAAIC,UAAU,GAAS,gEAAvB;AACA,MAAMC,MAAM,GAAG,EAAf;;AACA,OAAM,IAAIC,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGD,MAArB,EAA6BC,CAAC,EAA9B,EAAmC;AAChCH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,UAAU,CAACO,MAAtC,CAAlB,CAAV;AACF;;AACD,SAAOR,MAAP;AACF;;eAEeD,MAAM,E",
      "sourceRoot": "/home/henry/expressmysql/public/javascripts",
      "sourcesContent": [
        "function makeid() {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const numGen = 10;\n    for ( var i = 0; i < numGen; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * characters.Length));\n    }\n    return result;\n }\n \n export default  makeid();"
      ]
    },
    "sourceType": "script",
    "mtime": 1574268540778
  }
}